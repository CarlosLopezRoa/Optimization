(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    240466,       4875]
NotebookOptionsPosition[    237090,       4760]
NotebookOutlinePosition[    237478,       4777]
CellTagsIndexPosition[    237435,       4774]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "}"}], ".", 
        RowBox[{"{", 
         RowBox[{"x1", ",", "x2"}], "}"}]}], "-", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ")"}], "^", "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.654494999158609*^9, 3.654495108827207*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXm8jlX3/83zfCTkGI+iZB4SOVeIY8yceTjGTCEc83DIkZCZTEWliEJ1
Gpw6t0KJPCrTQ4MGlIfIVCR+z7Ovz3vdr+v6+fbP/Tofu33t/dlrr73W2mvv
XSbxqXb9M2XIkKFFjgwZMv/3t9amAgdv3y4X4ffk3N7rb6e87EUS8pVeFFfG
8Oqlxo2pmGG9t+zA3ScTFpUwfGjuXT9smP2Stzl3zLRhJ4oYXuLl2Z9caLjW
+8TVU9Dw+3/+4/JDS1d5b7ny2QzPdfTT9hVzvOC94/Br6eCpU279GFm1zMvg
/vslzdpzfN3a248v8V7yy8eDT/pty7On4hZ5r/r1e+BLNpd9eVTxBd5HfnsM
v9Ykw5FWfeZ6r/vtN7zP6rmfZPnXbG+R31/DB3c5mzvXlGe8j31+DM87pdj2
HsOT+dvw1YVrDr4dP9X+htfWZb+qcmPEi8Yzv+NyZPviwvbVxjP4qPUvL5p7
10rjGbz2xY3PHlyx3HgG/+KPom/tqL/UeAav/NrFTK0zLjaewXsWqPZMyukF
xjP4R13fGXLw2DzjGbzLzaMVT5afYzyDL8r6ZeMG78wynsEHjV2cdnbGDOMZ
/ETrBxaeWjLNeAY/GlvxmR4HJhrP4FWHrV039+pY4xn8k+dSkzq/OMp4hr81
O579vMaGFVYOvHnfXZ321V1mPPO75+OBMbl+X2w8gxc48PStC58sNJ7B27lx
fN54Bi9dYG564prnjGfwZ/sX3Vws92zjGXxR2bFXS34403gGr9301VWjNk03
nsEvbGjxSMX3JxvP4FvmX7iZc+044xn85cdqj03JNtp4Bn99eXy7Rj8/ZTyD
T27Y+YFtHw8ynsF9nhONZ3jadOpsvs1vLTKewf3xXWD/P3jq0ddnzK01z3jm
t934/Y+uTn7WeAafm7yz+40Cs4xn8MTLKYc2nEw2nsFfc/2aajyD77270LuH
UyYYz+BlB6Z8leWtMcYz+LvPvPjawc4jjWfwrGfeGT4q1xDjGbxQnxEZJw/q
ZzyD33/5p3zJy3sYz+B3u/IdjGfw/a6dzY1n+PjV+y3rnuLPReVeeLtlYy5N
mp0SHSfhXdp/Uy+5zkyrF/xWUqafDt833Xjmd5rTP5OMZ/D6Ts8kGc/g1Z0+
edp4Bt/l9MYw4xl8pdMPA4xn8J+cnPQ2nsEfdvO9k/Fs33V8tjKeTf+58XrU
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
FypfVvMX+aF8FfXX/A6V36h1HPmhXedK+/ybP6LyrO/ID+Xba3xZb8ATguuF
xSF/1Hy0fVWV76r6We8oP0zyZvutKv+b2o9cUX635Nn2YVV+nPhBfihfR/PR
9mfpV5+gvUH5yhpf27dV+c9kNyI/lD+i+ch4UH5ayD6n/FK13/Z5VR47k7/5
d+aj7f/q37NJ/pEffvtJT9q+sMpjlyI/lG8pPYz/CN5Y+oHx5ftHWTc1vpTf
J/3D+FK+uPhnfClfTPwzvpS/ID4ZX8pfLRe0Gym/Su1hfCl/Vn4H40v5m5f8
9ZTxpfwe6X/GF55WaX1nfCn/Umh9ofwDsh/g0+xDyQN8Mj5vqv3YdZT/QHzC
M3hVyTk8U89D0gPwTPkfT/t2AjyjDx6RPQbPlO8rOwSeKT9b9h48U36R7Bz6
S/lckk/6i16pJb1heTwqf2ujb6fRX/BRsg/pL/Ukyb5lneIXO5m/sVP2f5G1
WK5P1lt7+H4IN7k4GLJ7TT9v9Ncj2gG+UuudyYfm737VA1/gJ0J2DvJ5+rRv
HyJX4HllfzKOjPs9spMZL9tvlB1Of1kfvlZ74BN8sPwCi+OID/yLYwUL9Itr
Vs6b5PBCkb+dPqnunT9e8PXUYXd5ca5dOSNTXFyuhndsTZEci+LuMfyi+25p
r8/WvO+kDitteBOn9wpb/eCrHZ9xXlXXnszeWsffzfQfXb/Kelld+/Mb/m83
XzJae8CLu3mR09oD3tH1t4L9/bXj4Uj6GLdOVfL4m9/XVU+q4/ePePDFbl2I
xNNO8HzqF+0EPyre4JH6rokf+g/e29knl+JpJ/hT6i/1gg9y/u+9XuyP+eYO
O1EmQrvmuXlUzWtzu+j7t2/HGl7V2VdFvQH1C3eOa1bU8DrqL+0E/0jtpH76
t13jQv3gJ9Xflj7u5ffxSK5jQZx+N3XyXMQr4ddv5b9W/cgJ+BFnJ5Sy8tTz
q5tH93jF/b9tnOe49bSQN87vl/ew36/IX+oX8gM+I1Seet53evtGfKLPm5Uf
FJI38KzOX8hr/QU/u9Hnn/aDD9Z4JfvjG/+FP77paRpfcMZ/o1tPf4mf47fP
yv8pOWH8wDuEylNPE/UL3ih/spwvh4wr+N5Lfr/gB/x98ck40d48Gndw5HaY
+KH/lJ+keQTv4A8V9dtJeerZ3dvvF+2g/Nkz/jyln+BPqTx/83t1nD+O8ANe
RPrhW398I/z7aukTcPiurn5d8uXKys8KzS/wveKf8tTzkOQQ3qxdGl/kHvxB
lYcf8FXBeRRhnNOkb5nX4HnP+POI8oz/x5p3fX19buUba7zQA+BFNa/hB/wT
yQn9BW/FOqLvIl8/SZ+wTsHfdhdnq2LrMv1uLZ7xf+GpdEjPYCd2deWL2Ty1
/VLHc0Hzl6mnnfpLe8D/7db3iqavqL+ok4dY+y71V3L1xJndjryfljzQf+yF
Px2ey/QbdktLN6+vWHybeuaJB3Dmx9jQumlxfrfuZLJ5Tf3T9F30G+UriDfm
icXbxRt/8+9dtW5iDzEvJ/YO6iX+Pz8P7aDNQ+yu0ad9HD+Hesr9GlyXqWdr
b58f6qeefGq/ybfKP+zmUVmbd3xnhnDkDHyw+Kc8/asqHDlAX/0m/sFpV1aN
F+NH/SXEA9+l/uEaF/pP+Unin3mHfTpR/cUORI4eljzjR8Df75eCeox6ikpO
qB97da2+i71KPS1Deo96Zqj96B/k9DG1Ez3A/Cju5u+95kfQ/kw/Buad1VNB
847yyPWz0huU57f7V0c/qldxvc1fy4PVd5F/y69Xf7FvGZ+/B/zPbi9v+gG5
OCD9CS/Mr0JFfR6QQ/BfJbfY66bftL4wf5nXc5x/+qC1E/w3l8fyqMkV8v+c
eEZ+wLP86ssb8sr8mxVqP/h3Lr5Ux8YX+byt8UU/mn+kftFP6lkh+8TsNs2L
keh5yQny1kX6k3XH8jE1Lti3yMk+6WfGlfpfkL6l/ZQv4/zW+ubngtfWOkJ7
kKuveixK3VDa9iNs3fxMvCFX/CJvlEcOK7y2Nn+lOettvaBdV1U/OP3w90mr
mN6G725qPzhy+7tbf6uanCCfI12+xMOGo5+uq37sXuovoHkHTv3jJFfMC7P/
VR6c+ptoniJXyHmaiz/EG866c8zZM9XNTkNeDkhOwJGvXqqf8aD+227f7QHD
qX+a2k+/qH+v/Atwyq+SnGM/UP4ZFyepaTjlc0qf0A7mX9Ey/jwCZz56zl+r
YPOUeZ3g9jdrGG7rrdYpyvHvBfv4cghO/SOkz5nv/PsgyTk49Y/SusZ8oP7L
0nvglJ+q+YgcUr5kSD4p/4nkk/WF7+ca5+sxcMtTdXGSWjZP0CfdVT846+NF
1c+6Rv2npT/Bqb+z5Ae5p/7GA/3+glP/SfUXHqn/0lCfT3DKr5Y+pF7KF9T4
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
1p4Fii96pVxk9pXx+w+/utT4rCl/v0qIT9rf8enH8sRdfc74pP2n3x8xbl2x
qH6g/UMfqL01ocls45P2n/5i6dvFJs6K6mG1v93y55MLvx+NS9D+txeUi637
TzT+QPuzvNd2Rkrz6cbzpQFFW8Y1i41U+PtUtW29lxvP/FZtm396o1LLon7x
8mJxJ1JLRrZ/lDX17I9LjOec2k/e4u09uOH1xcZzjX55byUUKh0pe7zLV0lP
LzKeExWvLTjnvfd6NFxoPC+4mXdw3N7SkfFtfprR+a5onCpd8ZMPQvrhD7V/
fcXXOjaoOsN4bo1/32PU9JQ3p0f9YrV/48dHx92oOc14zqX213zhzaTKKZON
55pq/618Py3Z8c4E45n2b/m+WbPVl5KMZ9r/aI7TSw56Y4znHK/EnEtYdHdk
VIm7O+dfvtB47q8467tPFkhJSV4Q9aP1+8vKLXUq/jLfeC6lffW2zx+qNGzf
XON5UtYiq1OHFY+8s3Xp+eMfzjGejyvOnfP2xfGjts82nuvUvnv0sBP3RNpO
OP1Vje2zjOclip88H1rvsqv9JzK9c+WN+8YZz/3U/m+bztl3+OiYqB+t9u85
vaRu+xVPG8+l1f4VP3zTIO7JkcbzZLV/bb/5qQuXmP0fKenmS8HIhdU/PtG5
0bPG20TFoc+XHz2m8OgU+54fJ46J/HDipZ43Nj8T0qsxkd3unPuMqJ3QsGD9
E6mFIy8e+HxxozrJxttF7f8Mc+eIpxlvrZ4uVHhRXJFIl7Pbfx+4a7Lxtknx
k10heyxW7T9wNum3N6YONt4mqP1bK7+ytHLTqH9B+xPvrTuic5V+Ib0ao3sF
exk/Ax3/OSJJZU93zZ9xuvFTVvtRx2pUG1H57qnGzwknD7kjmyd9sXNh/Umh
+GGeyMBSKzYljBpv/PCbu8TK+9u/P9b4ya39nKWjDj66Ld9o48ffhykQyVau
3sXEMSONhwFq5w9OTjoaD6XVzpVOHtoaD9+qnb989F1sclJz66+/z3Y9/dKi
pFEpB0Zbf19g/7dnic2Vl4+y/uZx7bydvnDm1UkVR4wIxecz6t7FodbOMqr/
fu27BeOZN9O/lL9Jew66cd+TftL1q7+1J037m+NeaP9I+4OJ0fngvvtjeq9C
JwtvG97D2vOm9j1v6ZwO7flQ9Q9JvXm+xpEM1p7tqr+l8naQE+ppqnMltLOy
6jvo7IQ20XZqv+hXl1fQzNo53/X3XPzQxfWH7Xv2UWsPv7Odfmgcssf+iB/t
+Gxp40g9e924tLN2btA+5g31F726UvucT4s39Oo6n4f4H8Qz/Trn5mlW794H
a41o9HJF61d1tet+5Tnbuqzyg9287m3t5/dTpx/6Wvv9felM3lmnZwaG/NCM
urdhqOmxLL68xc+XvNGvBeTnSj7pV0lf3uIvSp7pl7+vWMD768lIp9QtD1i/
smsf8z/Kh2S8aG/hEUfvbXClvsnVEu1vfqpzyuirjYozfBqKhyTqu5k0f+El
p767SPOd7/GbQ/oh6Nfk8fpJn8DPUX9ee69J/8BPrPIFDklfwY+/vuTwRku/
wU9LXw97L26v+/SN3m2Nn9+1X5ph545BndM7Gj8LfT3v/V07/44svboaP7R3
hfQq+s63o2I89DB6T3rbQ2+j93y7rqCHng/aLQW9HaF4iNYRr7PWEXjWuqP7
K6ZF/Ue1f43WKdrN76da1+D5iNr/rdZBeB6v9p/VugnPWqe837XOwnNt307w
bq2Y3zD/XQOM539r/zlf13/VG/bGk8az7BBvtdbxkN3iLde6b/F/tRc7AZ5l
V3jfy66AZ9kh3reyQ0Lrr/dJaP2VneNh58Cz7CIvl+wieKb9b8uOgt+San8b
2V3wzO9PstPgmfa/LbsOnmk/diA8y2704mU3wrPsTG+j7Ex4ll3t/S27NGSH
e9Vlx9r+lG/3eti98Ex7t8hOhmfZ1d4rsqtD9qEXtg9pP3Y7PNN+7Hx4pv34
BfCcg3sL5EfA7xtq/zb5HbSbX/wUeKb998uvgefsvh/k5ZAfBM/kKbwjvwme
N/p+ltdBflbIr/R+lV8Gzy19P84bLj8OnpUf4f0qvw+eae8T8hND/o6XGvJ3
aP9z8kPhmfb3lN8Kz7T/Dfm5Ib/Swy+GZ/mhHn40/JJvOER+Nzh2cjbpW/Ap
sm+Pte1XZPniJjYu2M+vSm/Tzs7ir+7o+IGrt7e1dq7lXgKtX7SzncqX0Xpn
81B2Y75fjpRb/UkVaw/26k2tm+AVZH8+oTw3xsXvV9bIcNkJ4NVkH7715lfV
V69vaeP1hvbFdofW079UT+456+cmbH/cyqdp3+qC7mOEh2Tf3ohcdrzdazx8
Lnu1sc7P0t9JKr/HxTPzG15Mdm9Pl1dTxPqLPBaXXQS+QfbtFOWPMV70d5lb
75qanC/37br0/bLrwE/Jvu3eKc/OGrWbh/Zz/0ifJPsQ/JLs2HLKezT/VL/L
ZGfCz3v67kB3biVq9x6Q3Vtadi88vKjyPWTHgn+ndh53ca3ovtsutfPfsofB
z6qd8yrM270hQyfTG4Nlr24Tjt5Y69cfn2+6Xz96Y5bs3sFqZ3D/5cf4M+67
FQ1/Svbz7+ovvK3XdxNl/4O/KTs8Xecp4I32lNa4oA8Lyv78VONL+69X8e3Y
dMkP7U+V3XtC9xjQzhyye2NcHtpdho+U/fys5DkYh78Zv1P+FHgl6bMhygNE
DmLVzgryy8BPy57/4tng/Hpd+4a7Nb+Yj3lVz/DQ/F0ne3iL5i88fC17df3P
vj6Bh7mybzdJL9Hf4yp/RH4reBONQxHpN+RnrOyxTUE9yToVGVLkWp/z764z
OSSeU0B2F/ggxWEKtBhUZHOpPoaT13FI+1bMa+I/t2XXgedWnKfC3Q8+M6pr
J8OpJ0X7Ysy7uuLjLdnPzK/FiqtkqePb2+AnFN8436/GpNTv2ls7Ocec9Pnq
FRt6P27lybv4QPuY1n6VL6J7ramH8iO0H8r4RoSH7fCBildkLzKj676R/a38
29LnRyQP4OQ/fCmc9bew1pcmRV5+/uzP3Q0nv726i6t3Mj0GPtS1s7XxCf51
aL0D7ym9Yf6y8DW33x2dOqy8lbd7yLWuwRvlVyU89fdDWYtbPXa/vvbNkdsJ
Wl/Oyf8FL6H1ZcPZJ96Zm7ev4eRj/K58AOY1v3vkX/P3q1p3Rrp7CDsbTj0v
KN8A/smn3at7GNADlh+rvAXGl/JL3P511P+lPPcwM16U/0b5xvBJ+VeULwGf
lK+nexjgk/ILlHcRlNvL6fsUhwF/OI8f56nT8KFrC1v2Mf2TqvWr6IYmxzYU
je4vs97l0706tk8nPKtw26cTHu/yK1pH9+mE/yukx3yefkmLO+/nq9j+Hfn/
ug+NeihfR+cUbF9P5S/rHgzb1xNevuOaVf9b3yyOJPxL5cPb/p3wKqH1Hbzn
9bWvVL6vsc0j1tkzofiS3euz6pPEBqPbWD3van1so7gceJLW34ziH/1cX/Go
Fhovy9vUd2NUv+VtCp+sdsIz+S0Vdd7f7B6VL9vB5weeKZ+sfHt4pvwC8Uw9
lJ+ivCnL21T5BI0j9Vi+UGheUH6b5AR8utbxppq/luep8sUlb+B/ya6YJ70B
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
jfj5f9WIOwI=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHccV9P/xz93nHs+SiFUSMloIbOiJCEqK5nJlk3Ze4Tssimyyky2MooS
mWVlhkhGKiN7FH6vZ6/zffz+OI/3657Puefee8Z7n0/rQ4f0H5zXarUbQ61W
iP5Y1moriW6qizNjrXas8B76bc+qVjtauL/wbmrzt/BfarOTbu6rcmBWq/VT
/RLV/6363sJ/CP8qfJXKRcIfq92a6uco4d3Vz3jV3yX8m+pXVdlbffyp62tV
f4noHNVdLTxM+BPha4QvFv5U+AHhsfQv/Ifue1Glv0oPPbeX6NaiZ4gupzJU
7f4TnaEySOU9lVNUosoA3b+vygnCa4qeJlpXuV339xPdUfQf0VdVDqV/tdla
ZWf60PgcqL53ZExUt6vKwapfQ994sOr7qL6F8CHCfYXnqK9d9fsOog/q/e9W
/e+6Z5zwGOFfhO8Rvp15EL5F+Drhr4RHC18v/LXwWOHRwt8J3yZ8o/B84VuF
bxD+RniGnjFMzzpe9GO9wyThJ0R3VZsWanOV2vQXbi18vfBuwmsKX8O3Ca8u
fIXwLsJrCA8X3kl4NeHLhIewTtTnSqI3q/5a1X+p+puErxaeK3y38G3CPwjf
JXyr8PfCjwuPF14qPEH4IeF/hZ8QflD4H+GzNV4PCI9R3QnB/fwsepGeuYLK
CF0fqWc3Em7EeKqcJXy46MMq5wofIXq0SmPhxqInBo/tL6LHBL/zcPW/h8ra
wjfouccGj/ki0a91z2Dde4Do8/ptT8ZfbVvpug/rmTWoMW2lNluJNuIbhNdS
aS/cLjdeS+23V/sJut5YpaXq+jKvoreqdFRZoDJRpZvK1Wq/oegGoo+r362E
54vekRkfoXvvKN12quh81qtKV5UTCr8n77uBSovM73qD2rVnnzC2WrcbCHfS
N66v6w65f7tFpYPKvmp/ovrZS3Saftuy8vu+r/bbCa+jNtuKdq7c93uqX139
byn8oNqvI7yH8NqiR+pZc9TXp6Jr6rq36tcQ7aJ7V89879fCzwtPEn208nds
o/rvRZ9W6a6yeel99KX6WiC6OftRdOvg711Z921aet9tItq59O/fqP1martp
5vtvTnvtZ73nIbrnNOFD1ccLan+E2uwtur9KIZyJnqb3PlVtDlab/XSdq74m
Ol3lKMZK9BvRCSobqRypfo/IjTdR2TjzO/2osk1m3tcymt8t0vM/0P09mTvW
WOlv/U70TngY/al9J7XdnHngOZXre+p93lO7HsJbiG6ssrvaTuHZwgcJdxR9
VdeHwTNpGzynq6qPQapfIfc6q0TfET1JZaDGp73a3Kq6/YTbCY8W3ke4jfCo
tF7aqO3Xum7H94t+rt97qX773Hzz+tJrbH3WHWtUbb5Qm5NV9heernY7quyQ
m2/vpDZ/qf5P/X6K3u8a4aP1vn1Ky4TfVb+e6pfT9SZ1zUvl/cs+biO8vOo3
Vf084Y/U3yzRU3TPAWrzkp6xruq+qvn7uwWPFWPWVbif8Mmak566/ln4J923
jfBPzFth/g6f30d9nloYv4ysKDzOrwgfV7ifZ9njat+r5j1yfOFnPQdvEd5N
eLLwMcK7Ck8SPlp4F+FnhFdDpog2Fx2l+jt5H11fgBzRO3XSN64rfCHvjJyp
LFtPFS3UblZmWXaS8Im51zFrlzV8uvrcm3dVXUmpzMPWUp/XC89Sm8fVdprq
Jgk3FN1U9TsKt1H9O7p+nf0rOktlhnAL0Q3VZkXhxXq/tYUvgH+Iflla3u4p
+kVp+dlftIN+uwU5IjqQdZZ77a2h9ztYeHXRY0rz+RVFD1Dd/rlldk30rcx8
+U+VlzPrHjvTRnRp0lfQW1pW1jPYc93Uz17wffa76nvz3Mz6yl+ir2WW3R+r
XV/R7ZAn+rbj9PsMZGtpmd+LNSI6LbMs30ZtGqvN1axl4VWFzxPetrAedRp7
Qnhl4bOEtxNuInyGcHfhhsKXo1MILy98Jd+v9+wm/JZo1Lt+qt/W1Rz1EG2k
+hFq83tl/v6b6PuV5c4jon9WljF/IDfUvoHaX6rrbsLLCV8s3KlYxsJqZwrv
Rd/CNzF+wh2Eb0PWCa8jfCN6GXtPeKRwb+Fmwhexf4WbCg8V7iW8ivA5wlsI
awpr5wtvViybstqp8LDCOubpwp0F9Hm1s+Frwvq82gXCXYT16rVzc8uadfWi
6+jHhyvLps11U9vSvAe5shQ5pLZLRLuJds3NH7fkPXLLy8lq94TaB3QcXc+r
eXyf0fVjogU6TmZ51FXXW6r/xegqhfluZ9Uv0vUOwfxkLz3r2ySbkFVnFl5v
r/O9undhkjvI8y3g57oerOtt2V+59YUvhbdSaRssE4/S730q8wr4007C/Wkj
vGJledqdPVi6zy6iTSrrI201PmsE9/e26BDVbSf8RG7+01P4MXRT4U2E70L2
sbeF7xYeJNxJ+D7hQ5GXwvcgN/h+4XuFP9KzntJzHxN9QfWTVb+86Ft6j/XR
G0Tnio7OzPfPy6wfjkL2iJ6cWQ+bo3I2+1plQGb+dKba3K6+7hP9Q886sLKc
XUd0BfU7XPUHii6v365UfZM0h6tmnsc7dO/9yA793hS5Q11uG4Y9eIrwJuqr
aebxWbX0PK8i+qvq7lLZTeWZyjJ2t8oyGZkN79ixMl6k/oZnXhvYQucX5qvv
qP8+meXFEJWn1L4L/AE+U7n9aqI/F9ZB0GXu1u+7q/ym6zHIv8yy59nKel0/
0bGiu6j8ovrnK+sGu4tupLJKZv5wQ2FeulDv0Db3GK2s35qXHptmoo+oPKO6
G0XrKuezhkUvRW6q/iHRmyvbPQvU5y2V7aaFwjsIf6/2TUWf1rOeF15J9FmV
l5iDwvtomnAT0edUXqa96FMqU4VXFH1SZYrwCvCk0jbZPqJXFpb1X+i9P9Az
j1dpiO6l69miQ5gzlYPQU1Q+UTkxs96/MmuPtZNbX0IX+kHX4/Sul2MHal+8
qboDVAK6TZJ7Z8EHKz9nvOj5lW3Bb/W9z+q+d4XHid5f+flnid5X+d3OEL0q
s06C7jgtycTVRe/Vb4cjf0VfrTx3A0X3qzy/L1e2o7cVvkF0QOV101jM8leV
e9E1RPtX/hb0w591PRLeIbp/5XX6Q2XddR/hm0QvqWzvIDcPqLyufqz8/uNZ
P6KbayzuVD87RH/LA6w30WGV7Sb0DWxzdLA94G/RNsaUpJM/qTYfVLZHWEv/
sAbV52fIFeHmwl+x34SboYcJr4BsUj+Hw3dEW1Ue+z2D9xh7DZ0fe5m907ey
fjtZ9f9Wtp3ZEztX3kvsqVL97CLciTUi3KyybYuNu42eu0DPOkb12wrfrPd/
UvWj9Ptn7DH1tW9lHaG16N3Ba3h/tT+sMh/aW3WHBfsZ5onOUP1M1p3o3pX1
hbVEz4ueU+Z2RpoX5ufc6Dllbu9mnoSPE30jzQvzc1FhHenD3OvkddXn0W3e
EP5U9B7mT7h19N6fLjy7st6PfMOW765vvBxdVW2eq+wD+Ua0cdIH0AvgJy8I
f1iZv00V/ruyfYXsWpLe8z74V2WbEP6N/oCsReaiY6xdtx3bg/UbbMt8md7z
MOHB9K13eVXf1Zy9rvIK/AeeofIaPFB0mN51rvrZqW4dkXFgPOA37B34Qr9g
u2cw84gNXrMeDp9ENzuBOVObE5FN+n1I5fs+U901+v3YzPrxcbl9OrwfY82z
GqJPqt1JwjMr8yDunYfNpPpThA+q7K+BV8Ozv6vs/2H/9g7W+Y+N9jPtCM/S
dU/1v03uPb9bsI1+vNp8X9nv9LroR6XXzPai5xT+rjfQc6jLrGvC89Ez+bYT
on1p30X7kg7mm4Q/K/1c7mXf9M4sd7ABsAXmBvs1sI/mqc3V+v3ozN9/NGtU
9JNgnRj5dio2XGk++YHaDwh+t2nszdz+Mtbx8tF6dkPRTYPtgnplHwF21dv4
gtSunco+NdtbbTP/Nqs0fgFZjFxRXVXZl7BeZhv+/tJ8/iXRY9lj6A7Y3cHf
N111Zxce75noNpVl2RzsM5WTa9YZXi69p+4pbSOxFj7X72NKf8fuovsEjzd7
+X18Iryv6mO0bVCJ7hv8LHjFkSrnCH+M3Z2bj+EfOLzyvbNZjyi9qvtB9EbV
75V5Le2q3w7XT1Mryw38nMiOzSvrsYzhSfquvWseH3gqOiH+Enwy6Fff6PrL
zPoVNnu3yjZ1Q9Gt4dfCjSrzXfTGqdgdlfVWfCP4mfBJ0O62zLyX354o7Ts6
F3lZWVfFP/Cq+nmbb2cfo+cxVsh2lTeFW4leqXbjhM/S911eWQe7RvQR/fY0
34V+nWzJBqKPoisILye6vtrdK3wm/Kay7jcCqt8eEcZQGJf08xz9jvsZc/QO
lTeEW4peGtzPVcjB4H6uFT69sN8D/0fj3DKCccSe+iqtPeQVejX+qt8z23Tw
6F3UzyDVT66slzMXT6uP94XnCHcsrL83y6xzv6frT0U3FF1Lc79abvm7c/A7
PF3ZL7JH5jX6i+iUzDLjnsz+D/hOK93bPLd8f7K0XjpU9JPCuhw63QfCnwlv
JPqhyufCGzMeKh8It2GuVD4Sbsdc0Y59KNq98nuPEe1aWYfGpzdTv70vvB58
WuUd4bVFZ6i8J7wu/anMFd6EOQluc6LeZ3ZhXRqdGv/Ax8IdWDsqs4XbF5bV
+OwORQbUrfP11Le+iB7Juk3PncZaFf1WfZ2aWed/P7PdDy/AH0A9vt9XSuuB
38NLK9sI8/Vecyv7B96Cf1Rui17XOrdeh59hoe65VvR0/GOlbZMfRE/PXH9V
zeuA9bBMPy/si/5bfZxR+nf8UOiW+CHY/2fqWVeIfh2so6KPcY0vB1sIOwgf
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
q6Q99x6ld5ovOi/a94RPhWtswy657cfO6d14z+2D8xu7R/Nv+Ds8vJfqB4pu
RT+qPx2s/qarr5nCa4q+mnzie4teExzv6Cd8e3DuxL7YXsHzuA/x+eD8igHs
u+C4yW7CFwTnuBI/mRKdU05ewfTofOtdonMNWDP/6V2GBucZ9lH9+cHz1Vv4
zuB8j/2ExwT75/HT3xIc0yH34Qzi8fqOB6NjQPgwyTEgp5YY19bRuSX41dE3
BwV/e4/omDG60fnRsSR8rfjaRwb7nPfg3uCY0V7Y8cHxIPJNbhKeKLy76kcF
x5v2jD7HgN+1v/Cs3O9ATukadecYbc94qM101Q+Mzq0iNkGuwgp1x3IOhTfW
HcM4WHj5umMqBwk3qTvucnh0HiM+jFvxd9UdHzpM9SvVHacZFO1rQkckhkwe
CXIVv/3v0TEtxvyV6JyqXL+/Fm3nFNhBdcddjlDdqsJzC8f7fouOkzFHDeqO
/RwgXK87ZsN3TYs+Y/CPvvXZ6Pz7v4Qb1h0TOlB1k6PPEvyp+nWCc9TfZW6j
zxX8IfxidF7+f6y76Jz+v4VfiM7j/1f44+jcVmTr7OjcVuTj59H5ssi+8bnz
w1eDz0THsJcT/SU6zxU+8AWyqnQu7svReXsZtpGesaHufVW0QXDOz8usi+gz
D78T94nOx0WePhocu2TcFqtcWngd/oTMKrz2lkbnJ7FfPovOFUZ2vxuta8J7
z63M694RfSla1yQ58ZPofF90hjnROc3I7o+ic3mR7x9G65TIxA+i9U7kIPlD
yE/07feidVN4+KxofRc+/060LotMeStal0VGL4nOo4LP/xOdjwV/mBp9HmaJ
vnvt4Ny/WaLnBJ+zYH7viM71nCF8fXRO6vPC10XnpE6Ff0fns04Rvjg6d/OJ
4Bzg5nrnzeDrdccLyZlBB8B2wIboGBx3/kD0kuhczwnIseAY64fBecvk9Y0S
PaqyrkecnbwgzhMdUTkPZ1/0V9HWwTmT7wTnFePjHEkfdeeUwBNOwl+h+pWi
867IIVmBdRScS4mOd0xlfZy8hYbB+YGvIBujcwJepO+681fgIQuic/EXVJbl
yPTWur40Ond2ou79NzoHDv7zX3TeGzyHRFZyX+Bd90bnULKn/oqOhSOLiX3j
n7itcuybeNIdon9Gx8iXye7oPNqnde8f0TF19Lr7o3NJGefno89QLUWHZbwy
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
5DA2Jv9dcW/wGSV8JuhM6E78l8D/Afxtbcc=
          "]], 
         Polygon3DBox[CompressedData["
1:eJxFmwf8V+P7xs85zxmfVLQkSmkZRUakLWWUrKyQ7OwiQpJRshXJyh6RKIms
rJ+RlZlRQkZkbxll/K931/N6/V+vnr7PfZ7njM85z7nv677u67Q+/MS9RmRJ
kjTOk0T/kq3LJFk3TZJHtfHDKkn2UXtU2+uEJElrSTJI9kOyS9n/qv+z5jfX
3MO0zzT1h2rbCxpfR+NraP5BsufLbiq7jux6snfT/LHatob6+6s9pX4DjRca
Hyz7Sdlryc5l1y+SZHPZe8p+XWMv6yLbav8xOt9M9ffStoc1Xmn8P/V/5Po1
nmp8qPr/as4GGt9e4ws0vrfaI7Jrgf90Hh1/C3UHyX5DY11kHyT7FNkfcWzZ
a8seq2NeJHu5th/OfdLxO+vYx6idq/4UtW805xzNv0/jd2neb5p/hNprslvJ
bqDznavx2bKny16hsV10jT/L/kF2e40frm2vym4pey3Z/2q8h47bW8efq35D
na+h+merfa3tR2r+65q/geY31Py6snfV9r+17TjNr2QPkH2m7EL9B3X+Ruqf
pm3nyx6m9obs1tq/kfYvZffX2CptO0b7t9L8PuofovF3NHa8zj9e575K7VvN
+0VzWurvcNnT1f+VfWSfKPtu9edp//W0/0XaNlH7H8ozlL2ejldf52sie7DG
Lta2RuofrPai+s00XlfjvbV/Fx1rG513I9n7avwx1o7GM9mPa7y57Et0jEka
Gyf7ftl3a/x32ZcUnn+/7D9Zu7KbyB6j+RdyLNnryr5A9mWyf89XL4ukm+Zf
KnuuxhvLHq3xC3gXZK8j+1zZl3Cv9Rt/kf2T5m+oHevwTLl/sr9nrWl+U42f
zW+UvTa/R/b+Gn9TdgvZvWUPlb2QZ695O+j39lM7U9taaNtR2nag5vTT3F3V
dtfYR7rOTXW+Wws/vxc1t5T9rOz2sq/RPldr3/XVjlH/KG37Ste6ocZ3Vv9o
zV+ksWdkt5N9teZcJfsGHXek7F11jhvV31jju8k+VvMX8+xkbyX7Ds2/SXYj
zWmkuZeqjVL/LY331fgcjU/T+MnadrHGLlE7Rf21tG1Pjf2nOSfpem4u/H7M
j+/7Atlby75Tc27BF8heX/Yk2VdUXoO3q79l4rXZUvaxso+W/Y2O95y2baj+
tdp2jcbe1zlPkr2Lzr9E/fYa30n2UTrfexov4vPsL/ta2c/L3kT2Ddr/Otai
7E1l3yz7Btn/6Ry9eEY6Vkdd72vq76xj76g2VseYKbs761v2eprztPZvI3uK
tl+p/VurnaD+ERq/U8c6vfTav1j79tLxXtD8jrJv0pzrNfcV2Z1lT5N9s+z/
yW4r+yrZU2S3k72j7GHa/138n/6OkL2Tjt9H55+v8Q6yb9T8qRofwm+Uvbbm
1XS+prIP1FihubPVX1Ntd9n/aM4BuraXtP9m6t+ibTdW/ovdVMdvqn0O5Jp4
d3W8Ssd7QvNbyL5M8y7Ht/OMZF8he7LsdePvI96sX/N95f42Sb3t9cL3j/t4
h+YfoPa07IZxfR8i+yXZ68quJ3uFrnFTzR2AT+ZdU9uWa9f4W5rbPfhdHqc5
49UqjW/MetC213jftf9m2r4cn6J+qfGN1B+g8Vc13lL2drIPlv0276fsbfDv
2udW2evF9cG9aIk/i+tvsObfpvEOvK/4Ytnv8y7rHCtlj5PdSfOba9thOlZ9
/f5NNNY2Hv9IjU/X2ELZ/WQ/oDl3ym6othcBW/NP1vy3Nb6DzAe17S5ijexu
su+VfbvsjrL3kH28jreE68UHsxbwedo/l91X9m+yd5f9p+adpv5+Ov5A/abf
ZZ8qex/ZA2Q31vz9ND+XPYZYK/sQ2fVkbyz7SLX91T9X+22m39cMn867pGNM
4FnpevZU/wSNf0DsKfzsuYfcy4sL443ZGv8D7KBzrqf93yKeEMuJQbLf4L3T
8T/ifmrsLO3zrPrDNKfS2KKID15WvyG+SvZoHfMJbftb/UotV3//3FgBzPC8
+r9pTpPMv7e/7P1y3+tm2vas+neqHS67hewX1H9FrR3xTu0rtVfxmfq7idrr
uePhvfg/Hbe/rvcpbSs1Nott6tfnN4EbZB+t/ppqbWSPk32s+ieUxla3qX+P
fvtw/W2Q+pwL1L83t/8AE4GNztT8Qv0n1d9R52ulfY7jWtR2kj1L25ekjtEf
qy3T/LX09wAdo6/u/T+6zhc0/qfaY5q7XOONND5M40+q/51a08w+dT7+Vv3B
6j8CJtD8kPtZ8Rv5rccRY2XPVr+Pzv+t9llbY39qn73Uvxo/qvGP45z/dP6X
1f9LbZ7sD8AU6u+htkD9pWA68A8xT/2jcq89ftN98X7w7MEkS9Uelv0z74rm
n6Vjf6o2R3YH3jeNXak2V/3lag+o/6GO+bv6g9ReU7+Prv8e9S/I7Z+/Lr0+
WCdfa+wq2ZfxrHhH1D9L83qABdUeZP1pTlt8kcZv1/09LvezvQyMm9vH4et4
Z5sVfmd5d7uCoWUfqH3vyezT8G1v6RynEG9lv6n+tWqXyx4nu436O+uYK2T/
T+1m9a/TtivUH6/xduofom2nyT4H+Muz0vE74Jtk31P4HeVdvVLbtgOPas5o
3mf8o/qPBft6fP5kzX9W11tX9jzZl8p+TnY92Y8TA2S/rH4bsI7s22S/qPHm
sl8hxsp+JhgLggmvlz0j93rnHeVd5XmzHu5Qf4ea1yRrcz5ztF9H2Z+mfoZT
cj/fL3WsZbLn8P6BA2V/yxzeJ7Xz1J+obYfmfuY8+yfUro3rgXfhE9n3q3+F
zn838Q8spvNPlD0dPCC7uexHNecPYjn3GEym9lnqNXY576Daj+o/FfEUa5q1
/aLavzrGLTreNamPuWnp94/Yu0rbHtfcm3hH1L9L2zoyV21Sah99mPoPac53
sm/hnSAXyY0PWfOs/RtLY/XrNb+D+vN1/xvrHM/wjHW/l2jbDxr/gfVW+n49
l/o38du65saOXbUG31G/g9rm6nfCB+e+x9zrzeLvfVfH+EL9r7TPmuq/qW1b
aW57bXtGf7/T8btnzmkWaeyb4GN3U3tX9nva5yvN7c79V3/P0u/TLRr7Stee
gYlkT5O9i+5/P56xztUnM74jLhAfpnE/gv0e/u+O1O9/99xYkWt4j/tV2Zd9
EI/3s+b01Fh/zd8+N37k2NtnngPuA/8xZ7H6L4CReJY6xoHqf69twzP79BfV
f1Z/99NYF/1dmNsn4Bu+07ax6n+sNpDYrW0TIj4epv6+bK95DbIWN43re6ja
vsQntS/Uf7v0s/s62L/upW2DMmPsT9X/PPfcIdr/XfaTvXdmDLGM/dW2BVum
vp6MmEg8UPtS/W85J88Gn67+Tmr9MmMGcpBFOv/XqZ/RE6XzHvIffhO/7Wu1
Ieq/HeMtOBO8yTbGOAfnmqnxi3j+mbkBrmG57ErtoMzXwLU8rHM8yXpWv2/N
mBZsC2avFcbMYGcwb53COQO5A5h0Fe+m9l9Ddl0dY6PSmBRsSo7xd268OEH2
eZnzP3I8cj1yuBW5MS3YlpxzZe6cjtwOjuA31gtrQMfuhQ9Wfysdb5TGG2h8
s9I5KrkqOfFfuXNOcs9msv/InX/hK4h5j+SO48TzIt6fL0rjGXBNP/3+ojTe
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
          "]], 
         Polygon3DBox[CompressedData["
1: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
H+4n4dM=
          "]], 
         Polygon3DBox[{{1377, 1376, 1911, 1100, 1101, 1912}, {1496, 896, 1102,
           1913, 1363, 1364}, {1599, 1056, 692, 693, 1057, 1600}, {1857, 907, 
          737, 736, 1036, 1574}, {1505, 902, 1098, 1910, 1376, 1377}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0s1K1GEUB+BjWn7MNAkupQbBsU/HXLmxlbjKlaCL2o2U2qIpKnJQkYIc
dZA2Yhcg0wWEXoFeQZ+WNSrMBbhoG/W8BHN4fuflz/mfeWf6SuXJxy0Rsa5m
zkWkfJU9wllbRLf+L/PMnY8o8jLv8DonOML7HOcjTnFaVeSnZs3Ja3KnvGTu
7wsRBfmdswxXnVU8815f5R63ecA6P7G/NeIzC/zCAX5Nu/Ibr/Ew7cTvvMEf
vMlb6kge5E8W+YtDbPA2jznMEz7zfTfs9MRup/pS2lX/wS4f9Tvc5xZ3+YZ1
LnCbZVY5y4dqQZ7kPB+YNSbfk5tmFlXTfXQ7v+usoR/V55P6Xs8OMssr/GO3
S3zr+Rw3eZE1ZtPvyEy6R3al3djJ13ylOuQVtnOZXhWLND4qND5e0lXEC/rE
c4e1lv//j3+ZhDv4
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1264, 1581, 818, 1263, 1925, 1459, 1265, 1926, 1460, 1266, 
       1927, 1461, 1267, 1928, 1462, 1268, 1929, 1463, 1269, 1930, 1464, 1270,
        1931, 826, 1271, 1932, 1465, 1272, 1933, 1466, 1273, 1934, 1467, 1274,
        1935, 1468, 1275, 1936, 1469, 1276, 1937, 1470, 1277}], 
      Line3DBox[{1279, 1831, 1995, 1278, 834, 1280, 1938, 1471, 1281, 1939, 
       1472, 1282, 1940, 1473, 1283, 1941, 1474, 1284, 1942, 1475, 1285, 1943,
        1832, 1996, 1286, 1833, 1997, 1287, 1944, 1476, 1288, 1945, 1477, 
       1289, 1946, 1478, 1290, 1947, 1479, 1291, 1948, 1480, 1292}], 
      Line3DBox[{1294, 1834, 1998, 1293, 1835, 1999, 1295, 850, 1296, 1949, 
       1481, 1297, 1950, 1482, 1298, 1951, 1483, 1299, 1952, 1484, 1300, 1953,
        1836, 2000, 1301, 1837, 2001, 1302, 858, 1303, 1954, 1485, 1304, 1955,
        1486, 1305, 2077, 1582, 1583, 1487, 1306, 2078, 1584, 1585, 1488, 
       1307}], Line3DBox[{1309, 1838, 2002, 1308, 1839, 2003, 1310, 1840, 
       2004, 1311, 864, 1312, 1956, 1489, 1313, 1957, 1490, 1314, 1958, 1491, 
       1315, 1959, 1841, 2005, 1316, 1842, 2006, 1317, 1843, 2007, 1318, 1586,
        1587, 872, 1319, 2079, 1589, 1591, 1492, 1590, 2080, 1540, 1594, 1493,
        1593, 1923, 2121, 1541, 1597, 1697, 1698, 1596}], 
      Line3DBox[{1321, 1844, 2008, 1320, 1845, 2009, 1322, 1846, 2010, 1323, 
       1847, 2011, 1324, 877, 1325, 1960, 1494, 1326, 1961, 1495, 1327, 2082, 
       1599, 1600, 2081, 1328, 1602, 1603, 2083, 1329, 1542, 1543, 2084, 1330,
        1544, 1588, 2012, 1895, 1331, 2068, 1545, 1592, 1546, 1782, 1781, 
       1332, 1710, 2069, 1547, 1595, 1548, 1784, 1783, 1333, 1915, 2070, 1748,
        1549, 1598, 1550, 1749, 1711, 1764}], 
      Line3DBox[{1335, 1848, 2013, 1334, 1849, 2014, 1336, 1850, 2015, 1337, 
       1851, 2016, 1338, 1907, 2017, 1609, 1339, 1072, 1611, 1340, 2071, 1551,
        1552, 1341, 2072, 1553, 1601, 1554, 2087, 1342, 1555, 1604, 1556, 
       1785, 1233, 1343, 1557, 1605, 2018, 1896, 1788, 1787, 1344, 1712, 1750,
        1558, 1606, 2019, 1897, 1752, 1713, 1767, 1714, 1789, 1898, 2112, 
       1747, 1559, 1754, 1715, 1345, 1716, 1790, 1003, 1607, 1560, 1763, 1346,
        2113, 1717, 1561, 1608, 1562, 1820, 1347}], Line3DBox[CompressedData["

1:eJwVzs8ywmEYxfGnKXQPYsYiw4w7wIaQFPXD2NtGNtq5jK7Fn6jchWlfFDtL
K5938Z3nnPOc95l37fou6+QiooWDhYidpYgJKvSuOcUhfbkY8Unf44i/4r/o
Lqp82ywXI2ryZRzLbmTrsjpfQk32m49o0Dm7wIlsT+dR9oRTFOR5bKW39s+y
P7zgDH1MsW//oNfQeeU/8IYmZvJh+jMG6a7OyBzjHS3MdebmijlLt3Vu6Q13
M/4Hq/x3umnXoTftztObdEO2XYjo0RfI+H+lJijl
       "]], Line3DBox[CompressedData["
1:eJwV0DlOQmEUBtBrCEOURFmBgdg6tBhKOztirBUcQcEhJnYWugfsVQpUFqGF
W3DCkQXgDjyvOLnfHf7ivWKtXW2NRUSV1XREPROxwWwu4lm/wrR+izmzF/2m
nM5GZMmwo5+3e7XblsfN8kzQ0FfsrtQRb2521QcGPNJzt6de88e7m6b6xAdL
3p+5ack3FOWBm335Ql62n1QP9N3kjV1bXTCfMi9wpD9PRRyqJTqU7T/dHssz
XLJo9mV2Iq9x6+23fp1T+Y6f5D9xL/8m/4O+PEy+n3+YZCtU
       "]], 
      Line3DBox[CompressedData["
1:eJwV0EsuA2AUhuFDXGpQS6CNGRsw0lklhqW0WkUjHbY1IQYEe2AJ3YdExaVW
wAqqdVlBPf/gzTnvd75/8uebnVJ7KiJ20JqN+JuPKODE/mtuoGk/nou4x3om
4lx2JDszf3AnP0zITvk3GnwFDdkt3/Qul/qyA7zjE4PkOjduRZ3l9F5Wxxs+
0JvhOi/2MV5RwzOm9be8uzZrOn3ZCE/Yx5V8zX1if0yZTla2iCq/NFfdH+xV
twxfwBgVWR4VeZePsMtz2JN1+BeW+Da/sA/Tf/Ey/wchnizv
       "]], 
      Line3DBox[CompressedData["
1:eJwNzMsyAmAYxvHXyGHtkLEsaq89w6IZi1YuwUpRbUwOCWPtBrgBsUlxHQ5X
wAYpMaMb6Lf4z/N/3+d7v9R2dasyFhEF7ExELE9FZJHB4WTEDf6xbl6djjjg
M3wOszg2NzHEpv7DH0f8Ce94Rh153a1Mu/n05o2/4BUNrOnv5JL+S3/C53kS
LZyZu/ancsHcS0Rc8W+7c7niPiOv0bO7kDm7rNzwfpEX7ffNl+MRJV7j97o+
30Wb/8g9dPhAlvHAf2UFj/xPVjEC0zMrTw==
       "]], 
      Line3DBox[{1400, 1527, 1978, 1399, 1526, 1977, 1398, 1525, 1976, 1397, 
       1524, 1975, 1396, 921, 1395, 2035, 1859, 1394, 2034, 1858, 1974, 1393, 
       1523, 1667, 2099, 1392, 1522, 1665, 2101, 1676, 1521, 1973, 1906, 1674,
        1520, 2107, 1692, 1578, 1672, 916, 1691, 1577, 1819, 1818, 1670, 1914,
        2074, 1709, 1671, 1576, 1817, 1816, 1668, 2111, 1708, 1761, 1707, 
       1669, 1575, 1762, 1746, 1780}], 
      Line3DBox[{1401, 1579, 1693, 1860, 2075, 1677, 1580, 1695, 1861, 2076, 
       1680, 1673, 1862, 2100, 1402, 1675, 929, 1403, 1979, 1528, 1404, 1980, 
       1529, 1405, 1981, 1530, 1406, 1982, 1863, 2036, 1407, 1864, 2037, 1408,
        1865, 2038, 1409, 937, 1410, 1983, 1531, 1411, 1984, 1532, 1412, 1985,
        1533, 1413}], 
      Line3DBox[{1415, 1678, 1694, 1679, 2102, 1414, 1681, 1696, 1682, 2103, 
       1416, 1866, 2039, 1417, 1867, 2040, 1418, 1868, 2041, 1419, 1986, 1534,
        1420, 1987, 1535, 1421, 1988, 1869, 2042, 1422, 1870, 2043, 1423, 
       1871, 2044, 1424, 1872, 2045, 1425, 953, 1426, 1989, 1536, 1427, 1990, 
       1537, 1428}], 
      Line3DBox[{1430, 1873, 2046, 1429, 1874, 2047, 1431, 1875, 2048, 1432, 
       1876, 2049, 1433, 1877, 2050, 1434, 961, 1435, 1991, 1538, 1436, 1992, 
       1878, 2051, 1437, 1879, 2052, 1438, 1880, 2053, 1439, 1881, 2054, 1440,
        1882, 2055, 1441, 969, 1442, 1993, 1539, 1443}], 
      Line3DBox[{1445, 1883, 2056, 1444, 1884, 2057, 1446, 1885, 2058, 1447, 
       1886, 2059, 1448, 1887, 2060, 1449, 1888, 2061, 1450, 977, 1451, 1994, 
       1889, 2062, 1452, 1890, 2063, 1453, 1891, 2064, 1454, 1892, 2065, 1455,
        1893, 2066, 1456, 1894, 2067, 1457, 1137, 1683, 1458}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{629, 819, 1925, 630, 834, 658, 1999, 849, 673, 2003, 862, 
       686, 2009, 874, 698, 2014, 884, 709, 2021, 890, 715, 2027, 1017, 1103, 
       897, 2094, 725, 1252, 1253, 1117, 1159, 906, 2120, 735, 1197, 1198, 
       1126, 2074, 1165, 915, 745, 1041, 1135, 2076, 927, 760, 1136, 2103, 
       942, 775, 2047, 957, 790, 2057, 972, 805}], 
      Line3DBox[{631, 820, 1926, 632, 835, 1938, 659, 850, 674, 2004, 863, 
       687, 2010, 875, 699, 2015, 885, 710, 2022, 1085, 891, 716, 2028, 1018, 
       1104, 898, 2095, 726, 1254, 1026, 1255, 1160, 1213, 2117, 1161, 1261, 
       1223, 1037, 1127, 916, 746, 1128, 2100, 928, 761, 2039, 943, 776, 2048,
        958, 791, 2058, 973, 806}], 
      Line3DBox[{633, 821, 1927, 634, 836, 1939, 660, 851, 1949, 675, 864, 
       688, 2011, 876, 700, 2016, 886, 711, 2023, 1086, 1087, 892, 717, 1246, 
       2029, 1019, 1247, 1156, 2108, 1157, 1221, 1192, 1027, 1214, 1162, 2110,
        1163, 1262, 1224, 1038, 1129, 917, 2107, 747, 1131, 929, 762, 2040, 
       944, 777, 2049, 959, 792, 2059, 974, 807}], 
      Line3DBox[{635, 822, 1928, 636, 837, 1940, 661, 852, 1950, 676, 865, 
       1956, 689, 877, 701, 2017, 1069, 1070, 1071, 2085, 1006, 1088, 1007, 
       1090, 2090, 1184, 1020, 1209, 1021, 1211, 1962, 1185, 1105, 1193, 1212,
        1028, 1257, 1029, 1967, 1256, 1118, 1039, 1130, 1040, 1973, 748, 930, 
       1979, 763, 2041, 945, 778, 2050, 960, 793, 2060, 975, 808}], 
      Line3DBox[{637, 823, 1929, 638, 838, 1941, 662, 853, 1951, 677, 866, 
       1957, 690, 878, 1960, 702, 1072, 1073, 1074, 2086, 1008, 1089, 1009, 
       1240, 1092, 2091, 1186, 1022, 1210, 1023, 1187, 2116, 1107, 1194, 1030,
        1259, 1031, 1258, 1143, 1120, 1132, 2101, 1121, 749, 931, 1980, 764, 
       946, 1986, 779, 961, 794, 2061, 976, 809}], 
      Line3DBox[{639, 824, 1930, 640, 839, 1942, 663, 854, 1952, 678, 867, 
       1958, 691, 879, 1961, 703, 994, 2071, 995, 1076, 1010, 1091, 1242, 
       1241, 1243, 2122, 1188, 1222, 1189, 1106, 1249, 1248, 2123, 1109, 1032,
        1119, 2097, 1033, 1144, 1123, 2099, 1124, 750, 932, 1981, 765, 947, 
       1987, 780, 962, 1991, 795, 977, 810}], 
      Line3DBox[{641, 825, 1931, 643, 840, 1943, 664, 855, 1953, 679, 868, 
       1959, 692, 1056, 2082, 1058, 1059, 996, 2072, 1075, 998, 1078, 1177, 
       2114, 1178, 1093, 1180, 1179, 1207, 1190, 1191, 1108, 1251, 2096, 1250,
        1111, 1034, 1122, 2098, 1036, 736, 918, 1974, 751, 933, 1982, 766, 
       948, 1988, 781, 963, 1992, 796, 978, 1994, 811}], 
      Line3DBox[{645, 827, 1932, 646, 1997, 842, 666, 2001, 857, 681, 2006, 
       870, 694, 1060, 2083, 1061, 881, 705, 1232, 1233, 1079, 1147, 888, 713,
        2115, 1181, 1182, 1095, 1153, 894, 719, 2119, 1219, 1220, 1112, 900, 
       2105, 728, 1113, 908, 738, 2035, 920, 753, 2037, 935, 768, 2043, 950, 
       783, 2052, 965, 798, 2063, 980, 813}], 
      Line3DBox[{647, 828, 1933, 648, 843, 1944, 667, 858, 682, 2007, 871, 
       695, 988, 2084, 1062, 882, 706, 1234, 2018, 999, 1235, 1148, 1203, 
       1149, 1215, 1183, 2024, 1204, 1011, 1208, 1154, 1155, 720, 2030, 1024, 
       1114, 901, 2106, 729, 1115, 909, 1968, 739, 921, 754, 2038, 936, 769, 
       2044, 951, 784, 2053, 966, 799, 2064, 981, 814}], 
      Line3DBox[{649, 829, 1934, 650, 844, 1945, 668, 859, 1954, 683, 1049, 
       872, 696, 2012, 989, 1063, 1145, 1146, 707, 1172, 2019, 1000, 1205, 
       1150, 1151, 1260, 1216, 2025, 1012, 1096, 895, 721, 2031, 1098, 902, 
       1963, 730, 910, 1969, 740, 922, 1975, 755, 937, 770, 2045, 952, 785, 
       2054, 967, 800, 2065, 982, 815}], 
      Line3DBox[{651, 830, 1935, 652, 845, 1946, 669, 860, 1955, 684, 1050, 
       2079, 1051, 1053, 990, 2068, 1064, 991, 1231, 1066, 1173, 1199, 2112, 
       1001, 1237, 1002, 1236, 1080, 2088, 1013, 1097, 1014, 1142, 2104, 1100,
        1101, 1964, 731, 911, 1970, 741, 923, 1976, 756, 938, 1983, 771, 953, 
       786, 2055, 968, 801, 2066, 983, 816}], 
      Line3DBox[{653, 831, 1936, 654, 846, 1947, 670, 1043, 2077, 1044, 1045, 
       985, 1052, 2080, 986, 1055, 1166, 992, 2069, 1065, 993, 1201, 1167, 
       1068, 1174, 1003, 1239, 1004, 1238, 1082, 2089, 1015, 1099, 1016, 722, 
       2032, 903, 1965, 732, 912, 1971, 742, 924, 1977, 757, 939, 1984, 772, 
       954, 1989, 787, 969, 802, 2067, 984, 817}], 
      Line3DBox[{655, 832, 1937, 656, 847, 1948, 671, 1046, 2078, 1047, 1048, 
       987, 1054, 2121, 1229, 1228, 1230, 1168, 1169, 2070, 1067, 1171, 1200, 
       1170, 1202, 1175, 2113, 1176, 1081, 1005, 1141, 1083, 1084, 723, 2033, 
       904, 1966, 733, 913, 1972, 743, 925, 1978, 758, 940, 1985, 773, 955, 
       1990, 788, 970, 1993, 803, 1137, 1138, 1139}], 
      Line3DBox[{804, 971, 2056, 789, 956, 2046, 774, 941, 2102, 1134, 759, 
       926, 2075, 1133, 1227, 1226, 744, 914, 2111, 1164, 1125, 1196, 1225, 
       1195, 734, 905, 2109, 1158, 1116, 1025, 724, 2093, 896, 1102, 2026, 
       714, 889, 2020, 708, 883, 2013, 697, 873, 2008, 685, 861, 2002, 672, 
       848, 1998, 657, 833, 1995, 628, 818, 1042, 1140}], 
      Line3DBox[{812, 979, 2062, 797, 964, 2051, 782, 949, 2042, 767, 934, 
       2036, 752, 919, 2034, 737, 907, 2073, 1035, 727, 899, 1110, 1218, 1217,
        2118, 718, 893, 1206, 1152, 1094, 1245, 2092, 1244, 712, 887, 1077, 
       2087, 997, 704, 880, 2081, 1057, 693, 869, 2005, 680, 856, 2000, 665, 
       841, 1996, 644, 826, 642}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
pOfx1bBpxvOT3qrBKjw/aXuw7d/zm++dz8bnJSGaoVvweUm3yJGD9HnHit7w
Ij7kgJErxYdMP8b/Lz6JPP7bEE9i8M6oGfEkp+bV1lE8i6IPSCH+oP6USxvx
h4USE70U/9tzvGm9YNtMW1ovUB09toDWa/Od095YX6gI+0PrC2OHtn+k9e3P
XK2BfAAOX5Ir8gEi6gdeUj6cez5K+QPP1tQnIH9go9NZecqfQoX9B5BvxPhO
GeUbyfy+/C7l25Odmw8gP4mLcLYE8pOMWC2MpPw06/TfgHwmRQ8PDyKfiSTX
zRDK51t5A2rIf9LQNeUK8p+El8scpPzn9m1XxH4hWqULr2K/EO1MK03aLw9V
bttifxGzz9G0v4icF9uB9lcKd7Y19iNZntTXgv1IYtexB2k/KvDL0v4lemUf
af+S1RHR6bR/rdT9fmG/kyP5vxZiv5OGviE12u98/+kD+f2fPpA9f/VhqnB8
JOoJdNR5VKGegJrF/XyqJ782T4Si/kBI20aqP+BjqLCf6k9A3HHJg5ucK4rF
zjujXhG9S50zqV5xV4bxo74RG9aOy6hvJDW/tNcO9U1Necpb1EPy6V2YGOoh
aVNKKqJ6eLdn503UT/JM9QPVT3Kk/OIKqp+JUmFRqLfkiViyPOotMVw0143q
7YG1Q2Goz8RL6fci1GfysF3mBtVndZ2RGajnpL/zUBbqOXnJL/evnguJGBxF
/Se6443qqP/kq6jQAqr/hj8tzuK8INYKhM4L0ujYXEPnxaH/5gsh/80XEvV3
vnC06+k8IlzpQnQekZvmG/vpPNq+vVoT5xcpFCyl84u4Vdnl0Pl1ececJzjv
yH7173TeEZPHdSl03knwBNngfCS+J1UO4XwkRr6XMWwUwx7zkVScp2SH/w86
T0mtwlZlOk8f+jlsw/lLzluZ1eP8JT/3HFSn85fb7XAdzmvi+2SEzmuiHKEY
R+e1WGSLAs530u66OhrnOzksl11M53vPNrev6AfIpmElMfQDpObIYmvqB4oS
H7ehfyDzl3tLo38gMxbslaT+4fnsg8HoN4i7nt4o+g3yjeVnRv1GWurpCPQn
pNzg1A30JyT6gkMw9ScHXj4XRz9D1Hl7qJ8hX2uEoqifMbo7XRD9D9ke6fAC
/Q+51ML9iPqfxf/5JZL/n18ib/76palhzh/RX5EphQ470V+RKVnGL6i/mtaX
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
sYdXogZrQDtHfqHqOja8rntxeAr/PVCi/Ucfaf/R7N//9h81cfQfhdD+o/nB
jTYYJ0DTPc8/5D7tmCq9KwQnPDMaK58uwwQvH6cqp2rM40TrRhszQ/66lzWC
3sv6teemtlcJA059U1Y5inFvYtZygaqW63/dL/qS3i+aIyx+v/xOLdTzOB1b
IcKG3Mn5F+cdvw9XOe7hyaL38OTpvnmn+aQd/Vw/6sVk5MPr7zE30us7QEJ0
znMf00bkCqus7Mp6UOQC/j2Rds/BivYfRdP+I0naf3Sbo17xPK1XfNP44et+
jzoU9DB+lBnIQl+0rzV/HAqDVz7P4jCuAzfdfQTXgecrnTaC69pur788FMyE
aW3CjssRC0QdE+vfZoSCuvfMQxgfwl62OMGHcPngo4UEH3LWPYrRukfVjgGC
M6Fwuj7BmVDo2TZKcCZ3tk82z9x6ZBC4S+23GQs1rVSLqxFLh0ccuHcnxb35
a7QkMY5FZR/LYzGORYKxhXUExz5aNGP/5El1SHrRno59j1hI1N7b2DH7BlRF
RQ5gPIxetvX1YTyMDmq0pRA83MK1N8eqjYkugUPrzDQWOuUX9ydJPBCaT7zI
xusgYHukDa+D6Fj2pMd4XSrluhF+P2zpYXbi98OSPv995P2b6D0/9+k9P030
nh9bN56ZFdp1YHJXr5P7Bgs2SH4+L5d8H7i+r32O/y+k/WST/wuqGTpJ5P9W
0D6peNonxXXg3z4pbtoP5UH7oWppP1ReVtwlvC/Iae9asi+oarC4huyL3peY
dry/0Lb7C9lfaBTj6yL769R7kugP3D74/jjWHxhumThH9Ket/997e2bQe3uG
6b09XywOqWW0VaNJtmEShppslHjabTxnZhZUz1SMw/qMlkasPY71GY1dNrQm
+ixJ+5LW076kKNqXZErrAE1oHWAfrQN8M3lTI+ZlqAh9JrwMNQYN3SS8bLfr
T11sX+js8zeA7Qvl3eqcTOyL875TEXrfacMhkTJsv0jTnkHsF61+ETVE7JcT
D+dRPDz9lZ0X9ifoQcNp4k9QjBzvbuJPOHG1E8XVliMhHzBvRbEj0+Zj3ork
9CU+Et4qJHK2A/s3lFw8EYj9G5Ln25JB/Fvb2iWK2E+iYfVk4idRiPyOPuIn
Ly2ZlfxSngmLg/r9mNjP5L/TKI/TOA7K4jnvMe6C3Z0GShh3Qcv1R9cJ7qrY
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
tXEdJue28OPye3JuC8dPzdlFzm0jq46Tc17gDgsg57ww/Hr2EXLOK/7rwECk
LhOG75UkPsffr3Ph7hRyLvxAe2XjKxUmVI8MG05guaXHpTiQc+RhTWtyrg0B
jPnkXBs+c2tsJefaPN6LSnvOMMFN/jM5B4evOz63knNwFeH+MiNLJqzjv0DO
zWFx4sz35Nx8vvgEOWcHEWcdcs4OaquDBsk5e9ypDsviMCYss79B6gfAz035
n/qBsYC20yuDmSDdc/SQUx4Lynb4/lNvwJm3bKR5S8465Cm0DlmFI56O0njq
ummkX34eEyk2x/OymJi/N+x4Qc4rl6Sv/1rCi+1oxi6+2gYWKnub00vqQHY9
2H6mZAkTbRz+kq+F/ZV7FTcfqRthc/B0r/84VzKlfJwzb5NF8zYjycezTbGf
3GJwi9S3IDc0nE3qW7L1a7b64e+sqPMk9TDI/qPZBVIPk/CTpaQkyURzxI54
HqlloYrghxdI/cwbiS7ZK4cYSOW1rmzyCAsdUMpTIfU5296xMlEIAz32Uw0+
/IOFDulH3CT1PJz30E6j99DedK4p7phgoDNSMaQuCL2YN6FM6oJafhv0fZ2B
5eCqTeqIkEn11SpSR2Qcd+25kxgTlbZver8Yy1Ok4TmD1B0lGR8NWrqCicLt
JLyaaljog9XBIVKndOCIrqK0BAPdy4ruyZrCRiukzKpIXVOHwpcTtmb4O8d5
+iwxD+oxsC4ldVAG6UvvifkwkFLeC17nnyy0v10xkdRNTY9St777iIFq6s3e
KLNYSA5t+knqrGxnuk7gv4K6iupJXRb6/xq78qgct+/fYIikAQ0SUqKBupdC
g43LVUqGkqSETKWJ3gqVJo0aZMiUKyol1M3UJTqGNIhCeZ/SpFRITyrUTdN3
n1/P9/db67Va6/fvu971POc5e5+9P/vsz967+UhPKeVl1Tbp6Ib38YldzcVY
kxqWZO+dlkV5XF5lF3sXj2WIb+rVA2ko93Na97so70vci+zTkWVId8P+i7a4
/5vbG2dQntiznyPyM6czZDAvNtUK9eFaakMR5ZVtdC0P7VNnSFhHE+WhkZTm
J5qUh/b5h6I6s4lPpkaHj+7C73raOUWL8ta0C5QPj/XnE7n4MspzI5J7JlpR
ntu1kqUlxhf4xHNO1QKHryx5cDqriPLizC/oFNne5ZPUG+zidJSX1Qj3eMqj
m6D0Ncu/mE+87+zWTm9midHJGgnKu7PmGTXH1PCJoW3GYYMPuG+WW69Rnl5t
V7Phi598co/1P5aC+6DXePce5fXNM+ZZvhzFkIbXrR83VrHE4sTnCZQHKKHc
ncyTRjlefE95g+RjQo8y5Q1uV590qWcyQ+r5l457otwn5rNdlGdY/fvHneEq
DJn5ydG7BPVzTeGqFZSX+ETOIXK5JkPUdW/Yr8H92XjvZjflMYokB6sOjuND
nKUGzduCG8/RiuZtBeeVq3P40IiLy1y5uGywYyguizw5hBsPc7jxB4cbg9fb
rD2K9uoa0zTlXT4L5yaxqpQHdabRriwZ7WRpePv+22g/C4/bj6G8qS2fQhab
f64gfx27ryaCcYeUyInllMd15S+pYG2ML9RDLzmmYXxhfLFRhfK+BPPs5cPk
2SO4PLtgvuYMl68R7JeozvVLvB4UR/lLwOt5R/lLYPTWW0jrRBA82n5Qws2P
AfugvielT1n4JCVU6d18BP4dI1a1yB3x7fnDNO8D5+IkgmneZ7h6EMHfX3O/
mzCRUvh8Eh27jT6frF94ooI+X5CHoMfxELJXH56q6lVOSN7SQWPTNnL2ZMh9
ej82gev34sH1eynh+r10LDUPvBXyGk7Z3j/r1cuCq66+zsiXxb/gTF8OZwre
n7T4D92f+ASMWKDHe0P2KL6QL0S7ekuFn03vnQK5e5gH3D1MJ3cP8/+tr/nI
8RwE8907uXy3YH39Qq6+flHt23R1LQaOzU4SVilnwb1vVf3DtY7QsGVUeuBM
BgazTQuc37KQ/3bFvxecnEDlXn7o0qko37UyXmUYj1zfphoRf2EvLI9ISbGU
ZWD5TflGG4xfut/qLxjHOoPMkRXplyUYeCOpHj/6HQsVourHBmxdYaHnmOvj
RzCw+rv1h9oqFkym2FrO7hy+7ltU6Yr9iTrEG1KO0ysbWFBrarWOF/aAR/OS
58x9xYfcTLXc/CYW7ve7P4tYyQMfPYW087l8CLCpt1D8zMK0lW7SvBxPSEqv
tt6azod7N7XbW1sRn2SMGXFotzfGP+lRVcf50HB6joh1BwuBUlYjiq0PQnBi
s4g+xo8aEV8PBXaxoJKU03Mn0QcUOy8slNFkQIIvPHED7ltGstqbke9c4KPh
YhFlFQZGjrbrr8F9ezNKSancwQ2sV0roW09m4GR+4pNYhoXtuwZ3/nXUHXQM
1204JcVAkfaF5+6VLJx6v8bL3W8f7HddcTZjJAMJrhYF4bg/qXKNkXZHf63X
buHqteMy36dl5vNB7sixc+EY36223aL4MPsAdPe23JH6mw/HQk/Of/mFhTw1
aYsXLYcgWoR3XekUH8aF775a1Y7n3W5EmEeEH8SXZFiG8vhQFq+b1obfa8qX
maZkEwAul6odPcz44DVXaNRGjJdjnMQ7VpsFwbku795AdQaMnplEnMd98FvW
W8jT2Q+r3uaIXpvGgI6j9cxA1BPtyL7YAisPmKqydXTURAbuXr+Slkzr06VN
Ny5M4oFr6vXYptEMSFfL5Urj9xr4RGiPV/Iatm7a7XOpuctpPpSEmX1Zh+sX
PWvmU5QfCHMzrPJU3PhwqyXmfHE32pOXQd/DNY5AtLmh28RZDChHyf4YiXLx
NjuslGXqDQVlX3w1UC4d1hq7A1AumkXypU2/H4TBh6nicuIMaFTBvu2ot/JZ
kdbEyeeX+mIprr5YK0JOvnAGA18+yMrcw+c/kCdSwoYB8CPYOXAiyremwdzy
T5SvtNiN4CuTg4a9p70r0b7hkidDbOW/zzZ4xpI8DaOjLrww+MfBae6kAIZo
da42W4f2LXjL98JBgyPgKXmuXi6SIclP/f50fsySt/mWt1Q0g+CDxo9VvbEM
0eZvfmj5iCUHBmQfhcwIgOVyIvtGF78lM0xzPxCpNtKwUqJui99lsNpZ4WO+
nCHfdjgpKJay5H1vscmbqiDQW58kmWOBdrVs/kO1Fyzp/+uFR7RxILj/tvX+
JHuGiD6syusvYomE3CFV0ZeHoctIJMFkD0NMVo8UMyhkyepNjPjaVz5wpy0u
74sbQ9Iai32f5rPkRvOoeTZbD/7iR2ZxfkRIoO7MnKs7Sw/6o0wTGHJpv/NW
01csKXfxVOMlHgKv2FfxXSYMGb84rH9BCUtGW8653GZ3AAwKXGRkcf0OZpnr
PXH9r79NfHfwoBdYdXUmfLZhSIFLwpWO5yzJlF8oNrUGcUiT61zZBMQnNxvm
L0U8k/ttvYO4fig8lrpdPDuPT+a12/c//8iSOT8XJKpODgYD3TabcQ18smHK
vFStBpZMzXC4vqP4/+q/xLj6L2eu/uuP1s05EwwZ0jT9tcxPXH9nUMyRH6o8
iNyx3iMZ9z/1seH3dbj/N6OMohcz+4HVvTVTy4whTzL811S/ZMnt5FJG+9Y+
uPNvhmzDaz6532obbt2E/i7aUpEX4ws7p5zf6/uRT1p9NXhL6llyOTCwr//b
wf+tk/ITqJNqS1Qr09FnyFKltf9se434Z4t2bZqeO6Tck+QZL2VIzk75m8K4
zmfKWn9su+8Ky01IcXULn+gutK24+h73wbv71W+av9YHDXD1QW8z9TtaFjIk
weIi7wo+3/a742ox1b3D1rmUnn3ajv+HBt+79P8gVK9rSf+/rP/RQ3wvSEqL
V+F74U5oSSV973Dxtf4RdXdcPzwWr6Lrh1NFJn/S9adPsmTwe8Gx3D8bvxeY
ROH39HsdwnWdcN+gosWV7htcfhEhOoD7dk24ehLuM3SJhdB9BoeURTPpPiep
v5yBcoEHN6TWolxg9pIzlVQuae0feChHsN/W9g3lCJphs2OpHHeUduWi3GGE
pRKVOyxaZh5C5V7EN3RA/YGb1edTUH+gX8j4b6o/69Zsf4P6BgMLJvehvsGP
kK8pVN++mhbPQ/0EDcO6eaifUHBpthPVz+Z1mVSf4WnqVarPIPahayzV57Gi
rhNQ/0Fhqh/Vf9B09aqh+r9tg8QZPC8QsMmEnhdoVjNJouelxEarHM8XPOlb
TM8XHDCJ1aTnS5C/58Xx94ofejzFcw2TNUf44bmGBUbSevRcd2rIUDsAlZNF
qB2ANy2+UtQO9M6Kv4d2Ay5aiT5DuwGLw35To3ajkD9KCu0MZP2hTO0MjExT
9aJ2Zs2iED+0SxCdIEvtEtTfdTejdinA9Iwn2jEoGGhoQDsGCW9SPlM71sbx
1io53tpZjrc2PrtvBdpDkHqyMRftIZz2uPA/9vB20qg6tJ/Qqyi0Eu0nZL7T
vkPtp8UyBS20t5DU84TaW1CfpP2c2luzmghqn+HCJDF1tM9QL64cQ+3zf/N9
FwTyfYL8saUcf0xw/nXcMPOv93Hzr8dz868VuPnXocPMv/7v/aonN8/6KDfP
2nmYedaRw8yzThxmnvUNbp51WtTGEPRrxGlVtAX6NeJ8/Iw/9Wt2D09Kox8k
adI2E9APkn0TDkhSP+iTKDwR/Sl54Jrkhv6U3GMOrqH+NEE12wv9LzGtt9uD
/pckBoY9p/7XXCXPGf01aTKIo/6a7MoUUaT+ulzIOxf9O3mdlZaA/p3oOtV/
of4d6kNWIR4gB1nFVsQDZJXrbh7FA4L3BmO5ewP7cx4XEW+QKeISOYg3iJtK
hxrFG9aJUv1HJzKkWiglHfEJ6Xm3y4Lik/kZM3rTpzEkpElkFuIZMmtWRDTF
M367WrsR/5AlXT0U/xAv/6p8in9sKlx3IV4ihilJFC+RpKqcTxQvrbW1Xov4
ilwpH3kV8RWJeq2mQPHVs8srUxCPkTE/HqcjHiOpxWd8KR47/yA0E/EbSS1/
rov4jdhIXzSh+M1ORjYV8R6x//qR4j0y375nAsV76uMq7yNuJIFx7x4hbiSb
jnwLpLjR8syajYgzicllfYozyc8Ms/0UZ25rtNBFXEo21EQ+RVxKWq+lO1Bc
2jBYOTAd4+JO+5EDiGNJ85hj8hTHlvxcNx9xL7npylDcS7J13pdQ3Ns59mf/
Im8+cReu9kGcTIzc7ViKkwviZcIRVxNHe3FRxNVkzek7P58jrv7oJrQecTiR
tPbtQBxOZJsDeg8iDmfGRicibiffn6zdgLidDPL1xlDcnq2zSw1xPul3CSeI
88n34E+5FOfbLti6CeMCQrYnKFfSuS3d2RY0LjguPycP4wvirn6zFuMLskO2
/E8aX+S5zM3EeIT0ueidwniE9GxIDaPxSEzYzKsYv5DA/Xs/YPxC/Ddf0qbx
yxyF3HCMd4ga/29PjHfIoXjrYBrvqAy8T8H4iCidUyjE+Ig47HzzjcZHOQp3
kjGeInX8MhGMp8iq3Y/raDwlWAdRzdVBjBvvxbgNlsEUBWE5Ibs22BKRHVk1
MxVeNw7FoV5cHDqvfigOVV0yOeYs4tUHQnMWNSKuLtdYpmd199c+JElcH5IX
h4WC8f/kr2UWBvh/UjGj9nf6f9VkGfpecqpTjb6XZOyOdKXvFewnHMj1Exbs
G2zE9Q0WXXaLNK/gQ/DmDk+HQRaUfgsX91oRClP2Rd0eHHgLVo7z6gzHtYFW
xrKqZycjoT2PiZqrx4cPRfXPO4Tb4KX9+LOfu6MAuPkCddx8gc3cfIEZro/j
otG/28cpXAxB/77osEW3y86wX/rYHOL62BgXGmSlZPGhOcd/5bcWFnYe/yTv
nxj5S92KOle3wpst51G3m4E9mxWlbhewUJKZmFVcehTcOh+nyaE/elRrpm1V
zMJeRXJ8tHEcnN7XHVuBcdYqhSen5jez4NK2d+m3a8chSszJOO1+BWl9tU4j
/zBLlCqfZkTNvgTapwfTJzpXEH1NqxMFcSyZQcwVduw7/Uv/9pVc/3bB/KAO
lx8U5/J6t7i83iiNobyeYN3fAq7ub91G+zR8L3w/VEffC55J76bT9+4+s/IP
XCcUGWzTxHVCXc2LO3SdgrzQTo4XGjW+Lgq/l2yt3RSP30vSshoN6PcK8g+9
Of6h4xj9GJQXaY7Jp/IiZT3H26m8nOcHhaHcieSqumKUOxHJeHSUyr1Q1eAa
yotUhiYZo7xI5oZ6aSovFeXaTNQf8o+P5HvUH3K22Ool1R9JzT05qG9kDvPQ
C/WNmEb4ClN9E+wXHcv1ixbqk76CciRb8sqoHMmLysFjVI4+pif3o9zJ7m26
VO7ka8ya61TuBgI8N0+O56bM8XUXc3zdsRxf9+q90RjIvAO189uKX05D/JBj
PnpTTCqUCvBCR3C80GcCPK4BjsfVzvVl7Usb6su6hOvLGq8YKYbPJ7KjGp/j
84mFZUubNT5fsE+OCdcnZyPHZxDm+AzJHJ9BkI/hyvExcvYM9S+dVD7Uv/Q5
179Us9Yo2uMWQ85usfBcm8iSPn6hGO0DKZine8/l6SQF8v4/Of5blMAckD+5
OSCi9UN9JuW5PpPOWkN9JgXvqX7j7qn+A1TNfvc=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{326.0041516585786, 133.5036760557683},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-10, 10}, {-10, 10}, {0., 2499.999285714337}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.367239401696058, -0.33407976701247677`, 0.009461550531034599},
  
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.654495097051896*^9, 3.654495109253038*^9}, 
   3.654632242600851*^9, 3.654633263808633*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a11", ",", "a12"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"a21", ",", "a22"}], "}"}]}], "}"}], ".", 
      RowBox[{"{", 
       RowBox[{"x1", ",", "x2"}], "}"}]}], "-", 
     RowBox[{"{", 
      RowBox[{"b1", ",", "b2"}], "}"}]}], ")"}], "^", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.654495064404653*^9, 3.654495070658922*^9}, {
  3.654495158467331*^9, 3.6544951746400127`*^9}, {3.6544953404926767`*^9, 
  3.654495353083107*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "b1"}], "+", 
     RowBox[{"a11", " ", "x1"}], "+", 
     RowBox[{"a12", " ", "x2"}]}], ")"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "b2"}], "+", 
     RowBox[{"a21", " ", "x1"}], "+", 
     RowBox[{"a22", " ", "x2"}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.654495071623987*^9, 3.6544951789617233`*^9, 
  3.654495353672435*^9, 3.6546322428486423`*^9, 3.654633264068943*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a11", ",", "a12"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"a21", ",", "a22"}], "}"}]}], "}"}], ".", 
        RowBox[{"{", 
         RowBox[{"x1", ",", "x2"}], "}"}]}], "-", 
       RowBox[{"{", 
        RowBox[{"b1", ",", "b2"}], "}"}]}], ")"}], "^", "2"}], "]"}], ",", 
   "x1"}], "]"}]], "Input",
 CellChangeTimes->{{3.654495334734569*^9, 3.654495368971129*^9}, {
  3.654495763557271*^9, 3.6544957637434893`*^9}, {3.654495876234858*^9, 
  3.654495876334989*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "a11", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "b1"}], "+", 
     RowBox[{"a11", " ", "x1"}], "+", 
     RowBox[{"a12", " ", "x2"}]}], ")"}]}], "+", 
  RowBox[{"2", " ", "a21", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "b2"}], "+", 
     RowBox[{"a21", " ", "x1"}], "+", 
     RowBox[{"a22", " ", "x2"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.654495369797839*^9, 3.654495764227152*^9, 
  3.654495877007539*^9, 3.654632242891191*^9, 3.654633264089246*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i14", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i58", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i9", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i10", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "1"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.654499475042519*^9, 3.6544995451401987`*^9}, {
  3.6544995992796993`*^9, 3.654499618796488*^9}, {3.654499694006391*^9, 
  3.654499698021229*^9}, {3.654499748414888*^9, 3.654499749396645*^9}, {
  3.654499863486865*^9, 3.6544999130157003`*^9}, {3.654500099828886*^9, 
  3.654500137257537*^9}, {3.654500415828246*^9, 3.654500446670142*^9}, {
  3.655286364285562*^9, 3.655286364911991*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", "x_", "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"1", "+", 
        SuperscriptBox["E", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", 
              RowBox[{"1", "+", 
               SuperscriptBox["E", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["E", 
                    RowBox[{"-", 
                    RowBox[{"(", "x", ")"}]}]]}]], ".", "i14", ".", "w"}], 
                  ")"}]}]]}]], 
             RowBox[{"i9", ".", "w"}]}], "+", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"1", "+", 
               SuperscriptBox["E", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["E", 
                    RowBox[{"-", 
                    RowBox[{"(", "x", ")"}]}]]}]], ".", "i58", ".", "w"}], 
                  ")"}]}]]}]], 
             RowBox[{"i10", ".", "w"}]}]}], ")"}]}]]}]], "-", "y"}], ")"}], 
    "^", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.654498873790148*^9, 3.6544989304533777`*^9}, {
   3.654499025006459*^9, 3.654499038948606*^9}, {3.654499075382411*^9, 
   3.6544990903318443`*^9}, {3.654499129868915*^9, 3.654499188107439*^9}, 
   3.654499488182588*^9, {3.654499549223178*^9, 3.654499567418641*^9}, {
   3.654499681483861*^9, 3.654499688148799*^9}, {3.6544997646096897`*^9, 
   3.6544998252913437`*^9}, {3.6544998841456547`*^9, 3.654499899266556*^9}, {
   3.6544999382647657`*^9, 3.6544999866899233`*^9}, {3.6545001795316973`*^9, 
   3.654500199568523*^9}, {3.6545005073843803`*^9, 3.654500605731923*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"1", "+", 
    SuperscriptBox["E", 
     RowBox[{"-", 
      RowBox[{"(", "x", ")"}]}]]}]], ".", "i58", ".", "w"}]], "Input",
 CellChangeTimes->{{3.654502227906371*^9, 3.654502229203087*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["w5", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x1"}]]}]], "+", 
  FractionBox["w6", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x2"}]]}]], "+", 
  FractionBox["w7", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x3"}]]}]], "+", 
  FractionBox["w8", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x4"}]]}]]}]], "Output",
 CellChangeTimes->{{3.654499946071786*^9, 3.654499973146928*^9}, 
   3.654500201313737*^9, 3.654500516173401*^9, {3.654500563894745*^9, 
   3.65450058672565*^9}, 3.654500623642414*^9, 3.654501934431728*^9, 
   3.654502229658309*^9, 3.6546322429563293`*^9, 3.6546332641779423`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"F", "[", "x", "]"}], ",", "w1"}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.65450022030379*^9, 3.654500233760191*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x1"], " ", "w1"}], 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", "x1"]}]], "+", 
     FractionBox["w10", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "x1"], " ", "w5"}], 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", "x1"]}]]}], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x2"], " ", "w6"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", "x2"]}]], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x3"], " ", "w7"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", "x3"]}]], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x4"], " ", "w8"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", "x4"]}]]}]]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x2"], " ", "w2"}], 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", "x2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x3"], " ", "w3"}], 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", "x3"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x4"], " ", "w4"}], 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", "x4"]}]], "+", 
     FractionBox["w9", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "x1"], " ", "w1"}], 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", "x1"]}]]}], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x2"], " ", "w2"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", "x2"]}]], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x3"], " ", "w3"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", "x3"]}]], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x4"], " ", "w4"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", "x4"]}]]}]]}]], "+", "x1"}]], 
   " ", "w9"}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "x1"], " ", "w1"}], 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "x1"]}]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "x2"], " ", "w2"}], 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "x2"]}]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "x3"], " ", "w3"}], 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "x3"]}]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "x4"], " ", "w4"}], 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "x4"]}]]}]]}], ")"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["w10", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", "x1"], " ", "w5"}], 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", "x1"]}]]}], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", "x2"], " ", "w6"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", "x2"]}]], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", "x3"], " ", "w7"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", "x3"]}]], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", "x4"], " ", "w8"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", "x4"]}]]}]]}]], "+", 
        FractionBox["w9", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", "x1"], " ", "w1"}], 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", "x1"]}]]}], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", "x2"], " ", "w2"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", "x2"]}]], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", "x3"], " ", "w3"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", "x3"]}]], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", "x4"], " ", "w4"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", "x4"]}]]}]]}]]}]]}], ")"}], 
    "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", "x1"]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.654500229095943*^9, 3.654500255825635*^9}, 
   3.6545005251891193`*^9, 3.654500626266985*^9, 3.654632265087639*^9, 
   3.654633285301724*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"1", "+", 
        SuperscriptBox["E", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", 
              RowBox[{"1", "+", 
               SuperscriptBox["E", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["E", 
                    RowBox[{"-", 
                    RowBox[{"(", "x", ")"}]}]]}]], ".", "i14", ".", "w"}], 
                  ")"}]}]]}]], 
             RowBox[{"i9", ".", "w"}]}], "+", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"1", "+", 
               SuperscriptBox["E", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["E", 
                    RowBox[{"-", 
                    RowBox[{"(", "x", ")"}]}]]}]], ".", "i58", ".", "w"}], 
                  ")"}]}]]}]], 
             RowBox[{"i10", ".", "w"}]}]}], ")"}]}]]}]], "-", "y"}], ")"}], 
    ",", "w1"}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.654500343570384*^9, 3.654500354920393*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x1"], " ", "w1"}], 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", "x1"]}]], "+", 
     FractionBox["w10", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "x1"], " ", "w5"}], 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", "x1"]}]]}], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x2"], " ", "w6"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", "x2"]}]], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x3"], " ", "w7"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", "x3"]}]], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x4"], " ", "w8"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", "x4"]}]]}]]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x2"], " ", "w2"}], 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", "x2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x3"], " ", "w3"}], 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", "x3"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x4"], " ", "w4"}], 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", "x4"]}]], "+", 
     FractionBox["w9", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "x1"], " ", "w1"}], 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", "x1"]}]]}], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x2"], " ", "w2"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", "x2"]}]], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x3"], " ", "w3"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", "x3"]}]], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x4"], " ", "w4"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", "x4"]}]]}]]}]], "+", "x1"}]], 
   " ", "w9"}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "x1"], " ", "w1"}], 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "x1"]}]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "x2"], " ", "w2"}], 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "x2"]}]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "x3"], " ", "w3"}], 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "x3"]}]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "x4"], " ", "w4"}], 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "x4"]}]]}]]}], ")"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["w10", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", "x1"], " ", "w5"}], 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", "x1"]}]]}], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", "x2"], " ", "w6"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", "x2"]}]], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", "x3"], " ", "w7"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", "x3"]}]], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", "x4"], " ", "w8"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", "x4"]}]]}]]}]], "+", 
        FractionBox["w9", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", "x1"], " ", "w1"}], 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", "x1"]}]]}], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", "x2"], " ", "w2"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", "x2"]}]], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", "x3"], " ", "w3"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", "x3"]}]], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", "x4"], " ", "w4"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", "x4"]}]]}]]}]]}]]}], ")"}], 
    "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", "x1"]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.654500348346285*^9, 3.654500355457211*^9}, 
   3.654632265163583*^9, 3.654633285444326*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "+", 
     SuperscriptBox["E", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{"1", "+", 
            SuperscriptBox["E", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["E", 
                   RowBox[{"-", 
                    RowBox[{"(", "x", ")"}]}]]}]], ".", "i14", ".", "w"}], 
               ")"}]}]]}]], 
          RowBox[{"i9", ".", "w"}]}], "+", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"1", "+", 
            SuperscriptBox["E", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["E", 
                   RowBox[{"-", 
                    RowBox[{"(", "x", ")"}]}]]}]], ".", "i58", ".", "w"}], 
               ")"}]}]]}]], 
          RowBox[{"i10", ".", "w"}]}]}], ")"}]}]]}]], "-", "y"}], 
  ")"}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["w10", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["w5", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", "x1"}]]}]]}], "-", 
           FractionBox["w6", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "x2"}]]}]], "-", 
           FractionBox["w7", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "x3"}]]}]], "-", 
           FractionBox["w8", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "x4"}]]}]]}]]}]]}], "-", 
      FractionBox["w9", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["w1", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "x1"}]]}]]}], "-", 
          FractionBox["w2", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "x2"}]]}]], "-", 
          FractionBox["w3", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "x3"}]]}]], "-", 
          FractionBox["w4", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "x4"}]]}]]}]]}]]}]]}]], "-", "y"}]], "Output",
 CellChangeTimes->{3.654500402129321*^9, 3.654632265183194*^9, 
  3.654633285478599*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"F", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.654632235455421*^9, 3.654632236143412*^9}}],

Cell[BoxData[
 RowBox[{"2", "+", 
  FractionBox["1", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["w10", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["w5", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", "x1"}]]}]]}], "-", 
           FractionBox["w6", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "x2"}]]}]], "-", 
           FractionBox["w7", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "x3"}]]}]], "-", 
           FractionBox["w8", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "x4"}]]}]]}]]}]]}], "-", 
      FractionBox["w9", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["w1", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "x1"}]]}]]}], "-", 
          FractionBox["w2", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "x2"}]]}]], "-", 
          FractionBox["w3", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "x3"}]]}]], "-", 
          FractionBox["w4", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "x4"}]]}]]}]]}]]}]]}]], "-", "y"}]], "Output",
 CellChangeTimes->{3.6546332855028048`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["w10", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["w5", 
                   RowBox[{"1", "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x1"}]]}]]}], "-", 
                 FractionBox["w6", 
                  RowBox[{"1", "+", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x2"}]]}]], "-", 
                 FractionBox["w7", 
                  RowBox[{"1", "+", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x3"}]]}]], "-", 
                 FractionBox["w8", 
                  RowBox[{"1", "+", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x4"}]]}]]}]]}]]}], "-", 
            FractionBox["w9", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["w1", 
                  RowBox[{"1", "+", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x1"}]]}]]}], "-", 
                FractionBox["w2", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"-", "x2"}]]}]], "-", 
                FractionBox["w3", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"-", "x3"}]]}]], "-", 
                FractionBox["w4", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"-", "x4"}]]}]]}]]}]]}]]}]], "-", "y"}], ")"}], 
      "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"w10", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x3", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x4", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w1", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w2", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w3", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w4", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w5", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w6", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w7", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w8", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w9", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.654632311873317*^9, 3.654632408319681*^9}, {
  3.654633268621354*^9, 3.6546333783729467`*^9}, {3.654633425799474*^9, 
  3.654633464610957*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`w1$$ = -2.1674, $CellContext`w2$$ = -0.936, \
$CellContext`w3$$ = -5.04, $CellContext`w4$$ = -1.97, $CellContext`w5$$ = \
-1.78, $CellContext`w6$$ = -3.46, $CellContext`w7$$ = -2.59, \
$CellContext`w8$$ = 3.41, $CellContext`w9$$ = 3.41, $CellContext`x1$$ = 
    0.272, $CellContext`x2$$ = 0.01, $CellContext`x3$$ = 
    0.526, $CellContext`x4$$ = 0.436, $CellContext`y$$ = 1, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x1$$], -1, 1}, {
      Hold[$CellContext`x2$$], -1, 1}, {
      Hold[$CellContext`x3$$], -1, 1}, {
      Hold[$CellContext`x4$$], -1, 1}, {
      Hold[$CellContext`w1$$], -1, 1}, {
      Hold[$CellContext`w2$$], -1, 1}, {
      Hold[$CellContext`w3$$], -1, 1}, {
      Hold[$CellContext`w4$$], -1, 1}, {
      Hold[$CellContext`w5$$], -1, 1}, {
      Hold[$CellContext`w6$$], -1, 1}, {
      Hold[$CellContext`w7$$], -1, 1}, {
      Hold[$CellContext`w8$$], -1, 1}, {
      Hold[$CellContext`w9$$], -1, 1}, {
      Hold[$CellContext`y$$], {0, 1}}}, Typeset`size$$ = {528., {163., 183.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`x1$5597$$ = 0, $CellContext`x2$5598$$ = 
    0, $CellContext`x3$5599$$ = 0, $CellContext`x4$5600$$ = 
    0, $CellContext`w1$5601$$ = 0, $CellContext`w2$5602$$ = 
    0, $CellContext`w3$5603$$ = 0, $CellContext`w4$5604$$ = 
    0, $CellContext`w5$5605$$ = 0, $CellContext`w6$5606$$ = 
    0, $CellContext`y$5607$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`w1$$ = -1, $CellContext`w2$$ = -1, \
$CellContext`w3$$ = -1, $CellContext`w4$$ = -1, $CellContext`w5$$ = -1, \
$CellContext`w6$$ = -1, $CellContext`w7$$ = -1, $CellContext`w8$$ = -1, \
$CellContext`w9$$ = -1, $CellContext`x1$$ = -1, $CellContext`x2$$ = -1, \
$CellContext`x3$$ = -1, $CellContext`x4$$ = -1, $CellContext`y$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x1$$, $CellContext`x1$5597$$, 0], 
        Hold[$CellContext`x2$$, $CellContext`x2$5598$$, 0], 
        Hold[$CellContext`x3$$, $CellContext`x3$5599$$, 0], 
        Hold[$CellContext`x4$$, $CellContext`x4$5600$$, 0], 
        Hold[$CellContext`w1$$, $CellContext`w1$5601$$, 0], 
        Hold[$CellContext`w2$$, $CellContext`w2$5602$$, 0], 
        Hold[$CellContext`w3$$, $CellContext`w3$5603$$, 0], 
        Hold[$CellContext`w4$$, $CellContext`w4$5604$$, 0], 
        Hold[$CellContext`w5$$, $CellContext`w5$5605$$, 0], 
        Hold[$CellContext`w6$$, $CellContext`w6$5606$$, 0], 
        Hold[$CellContext`y$$, $CellContext`y$5607$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[(1/(1 + 
          E^(-($CellContext`w10/(1 + 
              E^(-($CellContext`w5$$/(1 + 
                  E^(-$CellContext`x1$$))) - $CellContext`w6$$/(1 + 
                E^(-$CellContext`x2$$)) - $CellContext`w7$$/(1 + 
                E^(-$CellContext`x3$$)) - $CellContext`w8$$/(1 + 
                E^(-$CellContext`x4$$))))) - $CellContext`w9$$/(1 + 
            E^(-($CellContext`w1$$/(1 + 
                E^(-$CellContext`x1$$))) - $CellContext`w2$$/(1 + 
              E^(-$CellContext`x2$$)) - $CellContext`w3$$/(1 + 
              E^(-$CellContext`x3$$)) - $CellContext`w4$$/(1 + 
              E^(-$CellContext`x4$$)))))) - $CellContext`y$$)^2, \
{$CellContext`w10, -1, 1}], 
      "Specifications" :> {{$CellContext`x1$$, -1, 1}, {$CellContext`x2$$, -1,
          1}, {$CellContext`x3$$, -1, 1}, {$CellContext`x4$$, -1, 
         1}, {$CellContext`w1$$, -1, 1}, {$CellContext`w2$$, -1, 
         1}, {$CellContext`w3$$, -1, 1}, {$CellContext`w4$$, -1, 
         1}, {$CellContext`w5$$, -1, 1}, {$CellContext`w6$$, -1, 
         1}, {$CellContext`w7$$, -1, 1}, {$CellContext`w8$$, -1, 
         1}, {$CellContext`w9$$, -1, 1}, {$CellContext`y$$, {0, 1}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1076., {388., 400.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.654632320269301*^9, 3.654632335876382*^9}, 
   3.654632386672484*^9, {3.65463330670002*^9, 3.654633325213242*^9}, 
   3.654633379070065*^9, {3.654633435529553*^9, 3.65463346509571*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"1", "-", "e"}]], "+", 
        FractionBox["1", 
         RowBox[{"1", "+", "e"}]]}], ")"}], "-", "2"}], ",", 
     RowBox[{"e", "^", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"e", ",", "d"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<d(e)\>\"", ",", "\"\<EuclideanDistance\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.654671627799747*^9, 3.654671767683064*^9}, {
  3.65467181121209*^9, 3.654671843051099*^9}, {3.6546726699989233`*^9, 
  3.654672680612629*^9}, {3.654672726836833*^9, 3.6546727847421293`*^9}, {
  3.654673560718622*^9, 3.6546735793842983`*^9}, {3.6546736182272263`*^9, 
  3.654673658573536*^9}, {3.654683275858296*^9, 3.6546833329333363`*^9}, {
  3.654683479587541*^9, 3.6546835420453033`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
pkP///4h8P//kP8BOduYzQ==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["e", TraditionalForm], 
       FormBox["d", TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{-1, 1}, {0., 3.65890742745344}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"d(e)\"", "\"EuclideanDistance\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.654671638105914*^9, 3.654671767962665*^9}, {
   3.654671823016069*^9, 3.6546718433877068`*^9}, {3.654672673734022*^9, 
   3.654672680877921*^9}, {3.654672727554222*^9, 3.6546727850402613`*^9}, {
   3.6546735648911324`*^9, 3.654673579907096*^9}, {3.6546736214778633`*^9, 
   3.654673659298657*^9}, 3.654683276385745*^9, 3.6546833332027273`*^9, {
   3.654683492397751*^9, 3.654683542413198*^9}}]
}, Open  ]],

Cell[BoxData["*"], "Input",
 CellChangeTimes->{3.654683276341845*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["2", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["e", "2"]}]]}], ",", "e"}], "]"}]], "Input",
 CellChangeTimes->{{3.654672408254904*^9, 3.6546724302809258`*^9}, {
  3.654677619836152*^9, 3.654677622928945*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", "e"}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["e", "2"]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.654672415772387*^9, 3.654672430636594*^9}, {
  3.654677620417409*^9, 3.654677623438958*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "-", "e"}]], "+", 
   FractionBox["1", 
    RowBox[{"1", "+", "e"}]], "-", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.654672423488453*^9, 3.654672425092808*^9}, {
  3.654683203077002*^9, 3.654683203197198*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["e", "2"]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["e", "2"]}]]}]], "Output",
 CellChangeTimes->{3.65467242537055*^9, 3.654683204963373*^9}]
}, Open  ]],

Cell[BoxData[GridBox[{
   {"0", "0", "1"},
   {"0", "1", "1"},
   {"1", "1", "1"}
  }]], "Input",
 CellChangeTimes->{{3.654679982673728*^9, 3.654680046678649*^9}, {
  3.654680086968276*^9, 3.654680099799993*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"0.2", ",", "0.3"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"0.2", ",", "0.3"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"0.2", ",", "0.5"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "8"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"1", ",", "2"}], "]"}]}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ErrorBarFunction", "\[Rule]", "Automatic"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6], 
    PointBox[{{1., 1.}, {2., 2.}, {3., 4.}, {4., 
     8.}}], {{LineBox[{{1.2, 1.}, {0.8, 1.}}], 
      LineBox[{Offset[{0, 1.5}, {1.2, 1.}], Offset[{0, -1.5}, {1.2, 1.}]}], 
      LineBox[{Offset[{0, 1.5}, {0.8, 1.}], Offset[{0, -1.5}, {0.8, 1.}]}], 
      LineBox[{{1., 1.3}, {1., 0.7}}], 
      LineBox[{Offset[{1.5, 0}, {1., 1.3}], Offset[{-1.5, 0}, {1., 1.3}]}], 
      LineBox[{Offset[{1.5, 0}, {1., 0.7}], Offset[{-1.5, 0}, {1., 0.7}]}]}, {
      LineBox[{{2.2, 2.}, {1.8, 2.}}], 
      LineBox[{Offset[{0, 1.5}, {2.2, 2.}], Offset[{0, -1.5}, {2.2, 2.}]}], 
      LineBox[{Offset[{0, 1.5}, {1.8, 2.}], Offset[{0, -1.5}, {1.8, 2.}]}], 
      LineBox[{{2., 2.3}, {2., 1.7}}], 
      LineBox[{Offset[{1.5, 0}, {2., 2.3}], Offset[{-1.5, 0}, {2., 2.3}]}], 
      LineBox[{Offset[{1.5, 0}, {2., 1.7}], Offset[{-1.5, 0}, {2., 1.7}]}]}, {
      LineBox[{{3.2, 4.}, {2.8, 4.}}], 
      LineBox[{Offset[{0, 1.5}, {3.2, 4.}], Offset[{0, -1.5}, {3.2, 4.}]}], 
      LineBox[{Offset[{0, 1.5}, {2.8, 4.}], Offset[{0, -1.5}, {2.8, 4.}]}], 
      LineBox[{{3., 4.5}, {3., 3.5}}], 
      LineBox[{Offset[{1.5, 0}, {3., 4.5}], Offset[{-1.5, 0}, {3., 4.5}]}], 
      LineBox[{Offset[{1.5, 0}, {3., 3.5}], Offset[{-1.5, 0}, {3., 3.5}]}]}, {
      LineBox[{{5., 8.}, {3., 8.}}], 
      LineBox[{Offset[{0, 1.5}, {5., 8.}], Offset[{0, -1.5}, {5., 8.}]}], 
      LineBox[{Offset[{0, 1.5}, {3., 8.}], Offset[{0, -1.5}, {3., 8.}]}], 
      LineBox[{{4., 10.}, {4., 6.}}], 
      LineBox[{Offset[{1.5, 0}, {4., 10.}], Offset[{-1.5, 0}, {4., 10.}]}], 
      LineBox[{Offset[{1.5, 0}, {4., 6.}], 
        Offset[{-1.5, 0}, {4., 6.}]}]}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.9531250000000001, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{1., 4.}, {0, 8.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.654759230776478*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", "0", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", ".24"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", "0.078", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", ".0030"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", "0.0024", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "0.0124"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", "0.0044", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", ".35"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(Log\), \(10\)]\)[p]\>\"", ",", 
      "\"\<\[Epsilon]\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6547580460607967`*^9, 3.654758071266464*^9}, {
   3.654758178024104*^9, 3.654758237734227*^9}, {3.6547583319818*^9, 
   3.654758332178372*^9}, {3.654758364823452*^9, 3.654758365473884*^9}, {
   3.654758982083787*^9, 3.654759014791399*^9}, {3.654759098689246*^9, 
   3.654759104862604*^9}, {3.65475917033181*^9, 3.654759262855685*^9}, {
   3.654759301402576*^9, 3.6547593021986103`*^9}, 3.6547605347775393`*^9, 
   3.6547605908237333`*^9, {3.654760638504562*^9, 3.654760681109767*^9}, {
   3.654762355306384*^9, 3.65476237447374*^9}, {3.654764558200088*^9, 
   3.6547645601595383`*^9}, {3.6547645992547207`*^9, 3.654764636775593*^9}, {
   3.654765039650722*^9, 3.654765043208722*^9}, {3.65476522733165*^9, 
   3.654765229466338*^9}, {3.6547654031578913`*^9, 3.654765412213345*^9}, {
   3.654766277661326*^9, 3.6547662842870617`*^9}, {3.6547665047894278`*^9, 
   3.6547665093876266`*^9}, {3.654767165378298*^9, 3.654767181793378*^9}, {
   3.654767519223116*^9, 3.654767583235526*^9}, {3.654767633192376*^9, 
   3.6547676477330713`*^9}, {3.6547677658336077`*^9, 3.654767772702991*^9}, {
   3.6547703195158243`*^9, 3.654770329841835*^9}, {3.654773157196432*^9, 
   3.654773157670972*^9}, {3.654773190732594*^9, 3.6547732103315487`*^9}, {
   3.6547756915199633`*^9, 3.6547757114106293`*^9}, {3.654775905139496*^9, 
   3.654776019176049*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[1, 0.5, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
    1.6], PointBox[{{0., 0.}, {1., 0.24}, {2., 0.003}, {3., 
     0.0124}}], {{}, {LineBox[{{1., 0.318}, {1., 0.16199999999999998`}}], 
      LineBox[{Offset[{1.5, 0}, {1., 0.318}], 
        Offset[{-1.5, 0}, {1., 0.318}]}], 
      LineBox[{Offset[{1.5, 0}, {1., 0.16199999999999998`}], 
        Offset[{-1.5, 0}, {1., 0.16199999999999998`}]}]}, {
      LineBox[{{2., 0.0054}, {2., 0.0006000000000000003}}], 
      LineBox[{Offset[{1.5, 0}, {2., 0.0054}], 
        Offset[{-1.5, 0}, {2., 0.0054}]}], 
      LineBox[{Offset[{1.5, 0}, {2., 0.0006000000000000003}], 
        Offset[{-1.5, 0}, {2., 0.0006000000000000003}]}]}, {
      LineBox[{{3., 0.0168}, {3., 0.008}}], 
      LineBox[{Offset[{1.5, 0}, {3., 0.0168}], 
        Offset[{-1.5, 0}, {3., 0.0168}]}], 
      LineBox[{Offset[{1.5, 0}, {3., 0.008}], 
        Offset[{-1.5, 0}, {3., 0.008}]}]}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(Log\\), \\(10\\)]\\)[p]\"", TraditionalForm], 
    
    FormBox["\"\[Epsilon]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 3.}, {0, 0.35}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.654758058415866*^9, 3.654758063605775*^9}, {
   3.6547581810621853`*^9, 3.654758238154982*^9}, {3.6547589989600286`*^9, 
   3.654759015557651*^9}, {3.6547591730434113`*^9, 3.6547592165938272`*^9}, {
   3.654759247392116*^9, 3.654759263154454*^9}, 3.6547593026954412`*^9, 
   3.654760535223709*^9, 3.654760591635468*^9, {3.654760649193241*^9, 
   3.654760655493236*^9}, 3.654762378450014*^9, 3.6547645605919867`*^9, {
   3.6547646288073797`*^9, 3.6547646374673367`*^9}, {3.654765040733729*^9, 
   3.654765043702818*^9}, 3.6547652733551283`*^9, 3.6547654127357683`*^9, 
   3.654766286730481*^9, 3.654766510097677*^9, 3.6547671821943893`*^9, 
   3.654767293243443*^9, {3.654767519795498*^9, 3.654767583714707*^9}, 
   3.65476764813127*^9, 3.65476777348044*^9, 3.65477033041591*^9, {
   3.654773195846376*^9, 3.654773210787331*^9}, {3.654775693699521*^9, 
   3.654775705230049*^9}, {3.654775919889303*^9, 3.654776019530239*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", 
  RowBox[{"{", 
   RowBox[{
   "0.0220", ",", "\n", "0.0100", ",", "\n", "0.0110", ",", "\n", "0.0100", 
    ",", "\n", "0.0100", ",", "\n", "0.0100", ",", "\n", "0.0100", ",", "\n", 
    "0.0110", ",", "\n", "0.0180"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.654773160283744*^9, 3.6547732012399187`*^9}}],

Cell[BoxData["0.004419024527854283`"], "Output",
 CellChangeTimes->{{3.6547731714269114`*^9, 3.654773201518539*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<ds2\>\""}], "}"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.654781782238111*^9, 3.654781835446891*^9}}],

Cell[BoxData["\<\"/Users/poincare/Dropbox/Documentos/DMKM/01 \
Lyon/Courseware/Op/Lab/Lab001/ds2\"\>"], "Output",
 CellChangeTimes->{{3.654781790796344*^9, 3.654781835764168*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"Import", "[", "\"\<x100.xls\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"x", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"Import", "[", "\"\<y100.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"Flatten", "[", "y", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xh", "=", 
   RowBox[{"Import", "[", "\"\<xh.mat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xh", "=", 
   RowBox[{"xh", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yh", "=", 
   RowBox[{"Import", "[", "\"\<yh.xls\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yh", "=", 
   RowBox[{"Flatten", "[", "yh", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yt", "=", 
   RowBox[{"Import", "[", "\"\<y1000.xls\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yt", "=", 
   RowBox[{"Flatten", "[", "yt", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.65478183967071*^9, 3.654781850396324*^9}, {
   3.654782214268859*^9, 3.6547822624799957`*^9}, {3.6547823565277767`*^9, 
   3.654782375381147*^9}, {3.654782885384223*^9, 3.654782894684713*^9}, {
   3.654782929877002*^9, 3.654782939235302*^9}, {3.654783077601782*^9, 
   3.654783095702553*^9}, {3.654783128406781*^9, 3.654783173988443*^9}, 
   3.654783326906341*^9, {3.654783428078548*^9, 3.6547834360363007`*^9}, {
   3.6547834866629887`*^9, 3.654783511764476*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{
          RowBox[{"Total", "/@", "xh"}], ",", "i"}], "]"}], ",", 
        RowBox[{
         RowBox[{"yh", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"yt", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "yt", "]"}]}], "}"}]}], "]"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[FilledSmallCircle]\>\"", ",", " ", "8"}], "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*UnderoverscriptBox[\(\[Sum]\), \(i = 1\), \
\(4\)]\)\!\(\*SubscriptBox[\(x\), \(i\)]\)\>\"", ",", "\"\<\[EHat]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.654782253811409*^9, 3.65478232093004*^9}, {
   3.654782378813211*^9, 3.654782379365114*^9}, {3.654782536663784*^9, 
   3.65478259997773*^9}, {3.6547826418940268`*^9, 3.654782708405757*^9}, {
   3.654782768073662*^9, 3.654782817223851*^9}, 3.654782942575445*^9, {
   3.654783072601858*^9, 3.654783073776338*^9}, {3.654783515451564*^9, 
   3.654783659062688*^9}, {3.65478369787114*^9, 3.65478383193746*^9}, {
   3.654783904737279*^9, 3.6547839481890182`*^9}, {3.6547839984297457`*^9, 
   3.654784095176947*^9}, {3.654784196928166*^9, 3.654784208606917*^9}, {
   3.654784315696567*^9, 3.654784322613266*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{{2.007, 0.}, {2.007, -1.}}], 
      LineBox[{{2., 0.}, {2., -1.}}], LineBox[{{2.014, 0.}, {2.014, -1.}}], 
      LineBox[{{2.003, 0.}, {2.003, -1.}}], 
      LineBox[{{2.015, 0.}, {2.015, -1.}}], 
      LineBox[{{2.012, 0.}, {2.012, -1.}}], 
      LineBox[{{2.007, 0.}, {2.007, -1.}}], 
      LineBox[{{2.045, 0.}, {2.045, -1.}}], 
      LineBox[{{2.081, 0.}, {2.081, -1.}}], 
      LineBox[{{2.024, 0.}, {2.024, -1.}}], 
      LineBox[{{2.0229999999999997`, 0.}, {2.0229999999999997`, -1.}}]}, 
     {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{{1.977, 0.}, {1.977, 1.}}], 
      LineBox[{{1.979, 0.}, {1.979, 1.}}], 
      LineBox[{{1.955, 0.}, {1.955, 1.}}], 
      LineBox[{{1.9929999999999999`, 0.}, {1.9929999999999999`, 1.}}], 
      LineBox[{{1.996, 0.}, {1.996, 1.}}], 
      LineBox[{{1.929, 0.}, {1.929, 1.}}], 
      LineBox[{{1.967, 0.}, {1.967, 1.}}], LineBox[{{1.96, 0.}, {1.96, 1.}}], 
      LineBox[{{1.9380000000000002`, 0.}, {1.9380000000000002`, 1.}}], 
      LineBox[{{1.9729999999999999`, 0.}, {1.9729999999999999`, 1.}}], 
      LineBox[{{1.9530000000000003`, 0.}, {1.9530000000000003`, 1.}}], 
      LineBox[{{1.9650000000000003`, 0.}, {1.9650000000000003`, 1.}}], 
      LineBox[{{1.987, 0.}, {1.987, 1.}}], 
      LineBox[{{1.994, 0.}, {1.994, 1.}}], 
      LineBox[{{1.987, 0.}, {1.987, 1.}}], 
      LineBox[{{1.9909999999999999`, 0.}, {1.9909999999999999`, 1.}}], 
      LineBox[{{1.9319999999999997`, 0.}, {1.9319999999999997`, 1.}}], 
      LineBox[{{1.994, 0.}, {1.994, 1.}}]}}, {
     {RGBColor[1, 0, 0], PointSize[0.006944444444444445], AbsoluteThickness[
      1.6], GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[FilledSmallCircle]\"\>",
         StripOnInput->False,
         FontSize->8], {0., 0.}], CompressedData["
1:eJx1mwmwllUZxy+fpIhojm1q5ZaSjmOKpo6ZoZkVmZnYONY4jhI2ZKaERFZm
Y2VlSmBG5JaaWdEwjjKlRiZlZkRmauaakQIC4nLBK8uFS33v85P3J//x3hll
zpz3nPMs/2c959t93Dljz9iip6dnWfd/Q7r/drr/XTjj6EvOWvrS6J5X/t7w
zT8suP6YYUduGv/3+Kkzz95hTTs/9vZdLlpxwtB2vvn61pfWt/PT73p571Om
9bbjHzXbr9+i/f5j47Y/+bBf97fzP5t4xPBHbtiqnd/jiXUXnHnH2nb+7/c2
f0Pa+YVFj/vtvP+Te2554eva8bsPav6Sno3teO2Ji2686m7Xjz+82bGnHd88
acJlz5/fCXqfa9f3DTx03vKRW7fzBw6b/bZPjXf9aUvu77Lg+g8/9ZU33vSh
le36DbNWPnjcOOUHPVu24592pTnwkPxvt9+ca178xep2/Ktm+fbuP/nyHYee
tJ37NV/fc6z8v68r3YlHyO/Pr7p7t5snbWjnu8R1KXT/505oFOz+XebnT7lz
XTv/nTc/dt+aE+X3x2fv0EWM8ytqvfr665Q7r915f8foW318bfTBp84do/4a
6g+9WPrRr+tT3/Cr/I5sthuxRcyL31OmNYCQ3i805ExUfuzv9yWem6Sn4ebJ
Pfva8QcaeM9SXtiH5/cWPy+3379zVAMYv//+zEaA6qPEfa3z2J/nF3kz5B+8
qL+/NeY44PkF3/nPhP06f10xrD6Z3zgofn7YwG2/Z9v55vTzlrt+8Y0NwLRv
7Gt4Ow+e1WeJ/wj56Qqzi3DX/2NNYyDuD3/Kv/EWky9XXmfUec/G+eID+pQ3
/sv9sXf5b6R99CV+f1IxIL34J/fHvjcEPtTfe8uByX+Rv6P8Nt5n9MEvtOMy
t0XK/+rGfCeIV+Qh/+WODnf/Qxpz6Ijn3cvBOT+is2/XpJVnua8L5OfZkQ1g
lQ/24hh7lb6vFz/6r50auMzxvC+VASk/4oPxJvGLPp3/SBEsP9Dv9+DR88CP
4zKfozvt+Hdjmh2U95VXNH8D4Q+Nj2VOU9Tv/bW/4zLfneWv1HnqNu0Y/yG9
yFt5lXsYr396Vzmw/7XjL5a/3yT/3nk3lD91/VsKL+rvn8c1gJa+ucWv5+N/
HKNf7fVzjTqHis8y1+HSQ3zzPOKz86/8tfTWcQuWxH6ddj3yV7/7VsBxnvgr
feBD+qFnebu+0oGDpA99Gr/Bm/hYUPHK88v8z/L8MueVGZ+lBzy5H/5ZeyU/
0H4KDlvqHxLf+Gf5K/Maqr2WuS/UPvAvab/6szLHa6SvwmXH828r+5E//I3n
V/icJh7+U/ZkfCPeuv+/utoaNczzy1zv057+1Gx3l2Pii3gl/rjfOQ18rt+E
r97RmR+VO75X+qaEvynzuFH7fmvkF+8p+Ukv8XBVxH/1PbUA3R94XdSOv10J
UeJJPLy9Ud/xnXaMfqQ3/RH5ov4E+sQD/kN+iD/Kqz6/3f1/UP5J/j7RbL+b
8idfWhT6EA/gVfrx9+IBf2k98I7K7+UffEj/l5vhbPH30UMvPuq0JX4PnqWP
/Mp55Kd97dqwu4v0fbUSXsfgW39F/BZP+BPlV/C/y/2Jz84PqX+VJ/mu+uBP
fO1TApZ+4pn844+NB8xr3+SnGd8ck6+8Ct8VoKRvrwKk+ilzukf+GHfaMfyr
33IXI6Wn1DlbfDHvmHrh+chvtA/qm2GDfr8o8jfqE+lNe6beUb7Yh/RSfyxr
98Mfuv4z9Wd9WuZ4hf4K/6s9QL/6Rf7i47OVEHTa78v8p0of+ZH6wd/Kb4WT
88QD+Zz8Yx/mM2XeczOfUR/sL97wb56Hv1Be2IvxAv+lvsCT9jOyxsrjW+UP
lVehaW/lTf0tvhrrPuo05TUh5Jfywh+4H/SaD2R+yn7yW+nVfu6f+ST2oDzw
V35/QBmg8vhlMaB+8Jf6G/Jf9dkX9oS+nL+08g/niSfJr/pZvln+3juPf/sH
1S/5o/ZGvap/Jr9wPfmu/Be5JzgPv/K/WynY/TY27I4SD8g36yXxU+TukvWG
+29dBik9v68GifJJeYJf5+FXf0g96P7EB/FGfJbevWu99JIP6N+eqXxffFB/
DoS+9AfLqh6WH+qBFe33j1Y+4/eZn+G/Noa+5OdNFUDkH7xvCPlI34roD4Ff
zy94PuiY+Ov+KS/yf+WD/1W/2Pcm+ntH09/TP5xbBix+8b/6N/IH58kPpJ/6
QPo+Xgmd9C8ufSlP/JvrKzxdr3zIf12f/abvHdVUAAPBr98TD/weezD+7BX9
CPDvevT7Yujf/g/9D/Vf7d5bPQ///3TUN8qTfor2QT5lPgy96o/8RP0+XAmC
/dRy96OdHx/1HPWu9NGf1n+QD6uf/mqouJ56TH6pp5T/+UW/9oE/tV8LnsTH
qmZ4svIeGfZOvuH39Ieyf/Z4+32pf9/1IW/XJ35reL/6Jz/1e/qz8of8ld+e
ke+BN+mjX+AYepTfJyvfGhgUf+Rfrmd/8yXim/EP/6P+yBflZ/P+ZO888OL+
+B/pQV7i64Pl0My/kHenXY9/HtGOwYPypb8i/ulv6L+xr6w3pJf7Fc/bPF71
ziP/cH/4fSrsMft1npfxvsqrycon8fKXyqdc/9sKqPZLZ8R9Df17+yXYn/ip
8HOV+d510c+g/7w27Mn4SX7k/uW+9lce5X7PlJ4yrwn6Q/yF+CPfEG/Ul9oP
8tRe318NGfev7c5WHqsrQZV+6lnX089xPfW255d5PqV88M/ilfxW+rmPkV7o
V1/4W/FNfOy081WOHK99cV+Q/V/9J/mN8iRf8rz0hwWnPdQv9xXi85aKf8qD
frT6TH9E/8T1+0Q9QH4oPZzvmPiqfdPv1p6zf4B9KP/Kvh7S/8C/9FMPqO/v
ln91Hvk4xp/pH6hvPS/76ehH+pCn8/RjpA/5ddp5/KFj6h/lu03lV57P/Zj0
4Q/zPk97zH5A5sP4d/ejnyR+8z4v613yXf0J/XDtb6uSr/nMNypfMf+l/hcv
yEv6Sn1zPD/zP+6btM+sP6gXBuI854mXnrcy8gP63a6nH6Q/Jh8TX9wXaC/E
L/0J/nJxO6afJj7IBzw/7ws4X/7JJ5Uf+bv6p3/t94R78Y6/lr4Hyl+rT+xR
+8z+M/WF8oRe/dHDFYD1X9Arv5lvk28pT/yD9Kd8iNfqp8LLZdJLvaI+yP/U
d/Z/iC/Zv/I8zrd+ob4TD2Wuj3he9gu4n3Zc6pyo/OhvOc99hfJ+ofpBg7/H
IN75PfFXfqtdNkJ6qWcdg/9OyEf9Ub9LL/HO+Ep/Q/qoT/we/6c8waf00R9c
HfxkPqN88Rfyi7zVD/dDa8P+sl7TP5EPGH/Ag/LA34o36k3n8z6V+lD+8nzu
Q/T33Df0xHzeJ2S91x/4UV/kH8qT/MjxK3/t/pOiHodfzyMfUt70n+SH+yHX
l3mM055fXw7aeezF88mH5Id62/0fj/uffG80uejX/sdGP4t8RP57I77l/QX5
hvRh/8qX+kD9YK/Zb5Z+9OX+pd5jHCN/z3ss+kPk48qT+NVp58nfzfdmFd7W
Bv+O8a/GF/p127b7lfif0J6yfvpJAT7jt2PiieMD4n58p4jvxDfz49Oj/uA+
RXrIv4xfxAP5p17z/E/Xfvo7/IN4nFT7Z7/f9YvDP1HPOf/nij/ZT3N/8hn1
m/4s6zv8S75Pc//Xft8iPUui/0W8yvdPyot61PXUG72hn7wP09+BH+kDj/I/
Ld4X3hH93Xwfx37yR37qPP7IcfoH9CE+6D8aX6lXlA/2pj0wXtrO5/sq7OfF
8AfSs3n90zuPfqPyoh4c/D0PeBDv+R6A/pnn5X0K+Yt4/nzhMe+TXA+/0pf3
C/S/1B/5lt/Dr/vxvtHzyA+c575fvND/Vz/ES+0Ne5B/6knll/eR3EeJb947
aE/QJz6wx+wf+j3+znnq/7QX/RX4VZ+v7X+c572D8SPfExEvNga9no8/kF76
FZl/KR/8W2/M64+I/9JDfJeew8PeiRfuv23ch2e+nP2D9AdXl7zXDWpf+d4h
4w3uTXlBn/P5PpT8Md8TWU9B36qgR/vK+0/ye+8v6Wf0Dcp/3o9yv6I+0x4P
ifsW7ov9nvpbeyKf7gv6PZ9+rPimvsv31soD/CjftFf6q8rr6einYT/a36K4
3+A+Tvzgz+Sf++fs50g/+Zv4zfqf+JjvFR3TDx/8/W/Gj6W1n/Lg/aLvE4if
yiPfP/A8w/3Bs/jG/zwf+FEf+EfpT/8/Pd4LYM/Zv5N+8mHtm/sE5Tkv6o98
PzY13kfn+fSP1GeVn4e5P/008UK8d32+hwUv8p/29GjU5+Qn8pf5Df5A+yVf
cj14d//s39NPzHpwXdij+uf9j/6T+J+/P/A8+ivGV+oD7TvznXzPjj7FI/1x
+f938SO94+M97+bv0zb5V/GW9Rz9sAfaMfKQP/yFeCA+rwn7cb98X539rq3j
PfW5cf+E/8v7VPFAfpbv2Z3n/kl58P7CMfagfui3iJ9Hoj82v/S9PuQj/bzv
VF+875Ue+jXKj/dixvff1Hrv4y+N/hL1qv5kxmu+D5A++q3qb27c12Kv2jP1
80Dou9POEx98/wT9G8Je/H5B5E/4K8+n36k86M++EHgSD9y/+H3+XqjEMUv9
3hLxnn6L8qQ/J31XxPsJ/JP+jftf96Oe8TzyAemjX6Q8sLe+sPe0D8fTSx79
QX/eH9iv5z5F/NG/zvch4iXv26gfPJ98XHug/tTfZH1MPiM90+L3Yfn7kKwn
b6v8yfiBP1Ifmc8tjN/PkX+pL+5jlBf3tcoz36dyXzkQ8hav0Ct9vNdV3sR/
86U/lgEoT/Ca8UD+iR/qq9olF6kv8iHPo37I36cpD95/O87fr+V7LeKl53P/
LH30R6Sfejn7GX4P/uSf/Ey88N7V/chv1F/eh1Ffu1++P6f+F1/cZzt/ehEo
Hrlfsf4HP9on+lDf+CPpy/hAv0H5XhnvWYnHyvvYuH/gPvelwL/yJR+Vf/pJ
r3ofF/kh/QTl1xfvhfvj913Yg2P297z8PWn+nox8cmPoL+3D9eBP+nnf437E
hw2B3/y9gmPyH+knXmj/6MN4SP6av6dzP/rB0s+f++N/Xg57S3tfH/gQ71m/
kU8ZP/L3ieQbno8/Uj4z4/ei7Of34Mt5+gfibXncn2f/Cvk5Tz6xKvSl/ulX
5X2X+KM/rD7oP+jPiC/iBX8+WH+8p6fK6zHaL/m68oSe7E+7Pt/b837R+cQH
+Y3yJ18XT3m/j/zV54GR/+d7AfyP/Owa93v059Kepf//LneTYQ==
       "]]}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*UnderoverscriptBox[\\(\[Sum]\\), \\(i = 1\\), \
\\(4\\)]\\)\\!\\(\\*SubscriptBox[\\(x\\), \\(i\\)]\\)\"", TraditionalForm], 
    FormBox["\"\[EHat]\"", TraditionalForm]},
  AxesOrigin->{0.21978125000000004`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0.273, 3.6790000000000003`}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6547822559080877`*^9, 3.654782321198681*^9}, 
   3.65478237977184*^9, 3.654782545446286*^9, {3.65478258685114*^9, 
   3.654782600875368*^9}, {3.6547826481442413`*^9, 3.654782704138775*^9}, {
   3.654782776687628*^9, 3.654782817646521*^9}, 3.6547829430318327`*^9, 
   3.6547830740686817`*^9, {3.654783523388431*^9, 3.654783589693575*^9}, {
   3.654783621916321*^9, 3.6547836618553534`*^9}, {3.654783724169701*^9, 
   3.654783832751652*^9}, {3.654783905728538*^9, 3.654783948609147*^9}, {
   3.654784085419293*^9, 3.654784095674939*^9}, 3.654784130493301*^9, {
   3.654784201263753*^9, 3.654784209023109*^9}, 
   3.654784323383497*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXQmYVMXxH+ZcFpbLKzEkHqhJPBA1ickfwQNvJeb71C9KJAkmIqcoHp83
XniLgpwql4iIKIqKGAnKpXJ4oaCgoOKBCoIHoohH/+tX3dXTb+a9eW+HZZbo
m+/b2d1+3VXV1dXV1dX1qjt2Oa/bGb27nNf9X112Pqpvl7O7df/XuTsf2acv
FaUaJBLJlxOJBuN2TuBvlUjIV/7zCr7cElOwL/9Kqa5du8oTp9KY2lby1Cmj
fVwptNIu/CutfvjhB/Xxxx+rDz74QG3atKk6StsWptLLL7/MFZ988kmCpMve
e+89LrvyyitNWVbNmzdPnX322VyOH/w9Z86chnWJK2XK5s+fz2XXXHNNIqme
f/55Krv66qvVmWeeqVauXJmoCkK6H//ZWKnbb1dq992VymZJEAlsJqNUCyLj
0EOV+s9/lBo4UKlevZQaPlypb75JGj6qhx9W1DFFyJR6+20G2Tm4C8JnIl2d
d9556quvvkoIKPpbnXvuueqqq65S3333XS6I4jbmgerYUU9KmqsN+ZvKfvc7
pTZuVKpnT/ynyxpT7xYuzAP4WzB9MjbLli3jsvvuu8+ynf7mstdffz0RSJwI
oVq61BLXSAjp18+WWeLAXhdAJ02cHlh1//33qzFjxhA+fOthluqZEvTPnDmT
y1588UVL/wsvvMBl06ZNi0D/gw8W03/00cX0b7ttKfrPP/984CB8+E6pe++9
NxL9U6ZM4TIaB0v/UmIpyghGBPoXLy6m/8ILi+k/6KBS9JMcqm+//Zbw4Tul
vv/++0j0jx07lsvef//9omk7cuRITX/Gkt9aqD744GKR3m03pTZsoGnVOU81
JuecOXmqI4j0XXfdxWWk8SxJ0H4oo2fBLNXzjZqQylSXXaaHvEGDJNNSo1Qy
qYtOP12pK65Q6thjlfr735VatEhDQbPRo5U6+WSl/vxnpSZM0HBLqAmhefz4
8UVi8MYbb3DZ3XffHUzz/vwnDfy770IIlWrfnlQd6boTTtDq6s47dfVXX1Xq
kUeUWr7cqlL14Ye6bP58D6FN+VeWiXrttdf4kUO00PwINUURTTdL80svvcRl
9Kx+aL722msZ4YgRI9Szzz5bSPOrBBJFDz74oKX5oYce4rJXXnmlfmhev369
FdoePXp4aU7TGvSNuuiii9QFF1yAaSmrCM1Tt7iilDc3NGC4u3fvLhTrRa9K
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
uyH+wcs2hfXyBZFnYKLB/wO+KXNZ\
\>"]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.65478370751368*^9, 3.654783716902615*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoxWhiskerChart", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Part", "[", 
            RowBox[{
             RowBox[{"Total", "/@", "xh"}], ",", "i"}], "]"}], ",", 
           RowBox[{
            RowBox[{"yh", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", 
            RowBox[{"yt", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "yt", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", "0"}], "&"}]}], 
      "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "-", "2"}], ",", 
   RowBox[{"BarOrigin", "\[Rule]", "Left"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{
    "{", "\"\<\!\(\*UnderoverscriptBox[\(\[Sum]\), \(i = 1\), \
\(4\)]\)\!\(\*SubscriptBox[\(x\), \(i\)]\)-2\>\"", "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.6547850000794573`*^9, 3.654785197167395*^9}, {
  3.654785242130821*^9, 3.6547853508436317`*^9}, {3.654785392403762*^9, 
  3.654785412545874*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.07859999999999995, -0.19605693430634064`}, {
     0.08859999999999996, 2.1960569343063403`}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], {}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          GraphicsGroupBox[{Antialiasing -> False, 
            
            PolygonBox[{{0.00825000000000009, 0.8039430656936596}, {
             0.00825000000000009, 1.1960569343063403`}, {-0.03349999999999986,
              1.1960569343063403`}, {-0.03349999999999986, 
             0.8039430656936596}}], {}, {{}, {}}, {}, {
             GrayLevel[0], 
             GrayLevel[1], 
             
             LineBox[{{-0.007000000000000117, 
              1.1960569343063403`}, {-0.007000000000000117, 
              0.8039430656936597}}]}, {}, {
             GrayLevel[0], 
             GrayLevel[0.5], 
             
             LineBox[{{{-0.03349999999999986, 1.}, {-0.07099999999999995, 
              1.}}, {{0.00825000000000009, 1.}, {0.08099999999999996, 
              1.}}}]}, {
             GrayLevel[0], 
             GrayLevel[0.5], 
             
             LineBox[{{{-0.07099999999999995, 
              1.0980284671531702`}, {-0.07099999999999995, 
              0.9019715328468298}}, {{0.08099999999999996, 
              1.0980284671531702`}, {0.08099999999999996, 
              0.9019715328468298}}}]}, {}}]},
         ImageSizeCache->{{69.5857864376269, 
          649.4142135623731}, {-99.4142135623731, -31.585786437626894`}}],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], 
             "0.08099999999999996`"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], 
             "0.00825000000000009`"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             RowBox[{"-", "0.007000000000000117`"}]}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], 
             RowBox[{"-", "0.03349999999999986`"}]}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             RowBox[{"-", "0.07099999999999995`"}]}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 0.08099999999999996}, {
            Style["75%", Bold], 0.00825000000000009}, {
            Style["median", Bold], -0.007000000000000117}, {
            Style["25%", Bold], -0.03349999999999986}, {
            Style["min", Bold], -0.07099999999999995}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], 
        "Tooltip"]& ]}}, {}, {}}, {{{{{{}, {}}, {}}, {}}, {}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-0.07859999999999995, 0.7843373722630256},
  Frame->True,
  FrameLabel->{{None, None}, {
     FormBox[
     "\"\\!\\(\\*UnderoverscriptBox[\\(\[Sum]\\), \\(i = 1\\), \\(4\\)]\\)\\!\
\\(\\*SubscriptBox[\\(x\\), \\(i\\)]\\)-2\"", TraditionalForm], None}},
  FrameTicks->{{{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.008, 0}}, {0.8039430656936596, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0, 0}}, {1.1960569343063403`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.008, 0}}, {0.8039430656936596, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0, 0}}, {1.1960569343063403`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0, 0}}}}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, {{1., 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[0]], TraditionalForm], {0.008, 0}}, {0.8039430656936596, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[0]], TraditionalForm], {0, 0}}, {1.1960569343063403`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[0]], TraditionalForm], {0, 0}}}}]], "Output",
 CellChangeTimes->{{3.654785407091177*^9, 3.654785413147965*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Part", "[", 
          RowBox[{
           RowBox[{"Total", "/@", "xh"}], ",", "i"}], "]"}], ",", 
         RowBox[{
          RowBox[{"yh", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "-", 
          RowBox[{"yt", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "yt", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", "0"}], "&"}]}], "]"}], 
   "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}], "-", "2"}]], "Input",
 CellChangeTimes->{{3.6547852185782948`*^9, 3.654785260134534*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.007000000000000117`", ",", "0.`", ",", 
   RowBox[{"-", "0.02299999999999991`"}], ",", 
   RowBox[{"-", "0.020999999999999908`"}], ",", 
   RowBox[{"-", "0.04499999999999993`"}], ",", 
   RowBox[{"-", "0.007000000000000117`"}], ",", 
   RowBox[{"-", "0.0040000000000000036`"}], ",", "0.01399999999999979`", ",", 
   
   RowBox[{"-", "0.07099999999999995`"}], ",", "0.0030000000000001137`", ",", 
   
   RowBox[{"-", "0.03299999999999992`"}], ",", "0.015000000000000124`", ",", 
   "0.01200000000000001`", ",", 
   RowBox[{"-", "0.040000000000000036`"}], ",", "0.007000000000000117`", ",", 
   
   RowBox[{"-", "0.06199999999999983`"}], ",", 
   RowBox[{"-", "0.027000000000000135`"}], ",", 
   RowBox[{"-", "0.04699999999999971`"}], ",", "0.04499999999999993`", ",", 
   RowBox[{"-", "0.0349999999999997`"}], ",", "0.08099999999999996`", ",", 
   "0.02400000000000002`", ",", 
   RowBox[{"-", "0.0129999999999999`"}], ",", 
   RowBox[{"-", "0.006000000000000005`"}], ",", 
   RowBox[{"-", "0.0129999999999999`"}], ",", 
   RowBox[{"-", "0.009000000000000119`"}], ",", 
   RowBox[{"-", "0.06800000000000028`"}], ",", 
   RowBox[{"-", "0.006000000000000005`"}], ",", "0.022999999999999687`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6547852583567247`*^9, 3.654785260833501*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Part", "[", 
           RowBox[{
            RowBox[{"Total", "/@", "xh"}], ",", "i"}], "]"}], ",", 
          RowBox[{
           RowBox[{"yh", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", 
           RowBox[{"yt", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "yt", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", "0"}], "&"}]}], "]"}],
     "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "-", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.654785621326083*^9, 3.654785623915765*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.01031034482758619`"}]], "Output",
 CellChangeTimes->{3.654785624326024*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.75"}], ",", 
     RowBox[{"-", "0.940"}], ",", 
     RowBox[{"-", ".986"}], ",", 
     RowBox[{"-", ".892"}], ",", "4803.786", ",", "4565.815", ",", "4122.838",
      ",", "4515.028", ",", 
     RowBox[{"-", "16840.135"}], ",", "1662.110"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.655286149575375*^9, 3.655286162461823*^9}, {
  3.65528626456345*^9, 3.6552863412874603`*^9}, {3.655286398469583*^9, 
  3.6552864023028316`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"xt", "=", 
  RowBox[{"x1", "+", "x2", "+", "x3", "+", "x4"}]}]}], "Input",
 CellChangeTimes->{{3.6552864161634073`*^9, 3.655286487870037*^9}, {
  3.6552865232405643`*^9, 3.6552865339320717`*^9}}],

Cell[BoxData[
 RowBox[{"x1", "+", "x2", "+", "x3", "+", "x4"}]], "Output",
 CellChangeTimes->{{3.655286424401393*^9, 3.655286488156464*^9}, {
  3.6552865256358128`*^9, 3.655286534220379*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", "1", ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SuperscriptBox["E", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "+", 
           SuperscriptBox["E", 
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", 
                RowBox[{"1", "+", 
                 SuperscriptBox["E", 
                  RowBox[{"-", 
                   RowBox[{"(", "x", ")"}]}]]}]], ".", "i14", ".", "w"}], 
              ")"}]}]]}]], 
         RowBox[{"i9", ".", "w"}]}], "+", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "+", 
           SuperscriptBox["E", 
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", 
                RowBox[{"1", "+", 
                 SuperscriptBox["E", 
                  RowBox[{"-", 
                   RowBox[{"(", "x", ")"}]}]]}]], ".", "i58", ".", "w"}], 
              ")"}]}]]}]], 
         RowBox[{"i10", ".", "w"}]}]}], ")"}]}]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.655286583318006*^9, 3.655286663974382*^9}, {
  3.655286711948189*^9, 3.655286712477417*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1662.11`", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"0.`", "\[VeryThinSpace]", "-", 
          FractionBox["4803.786`", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "x1"}]]}]], "-", 
          FractionBox["4565.815`", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "x2"}]]}]], "-", 
          FractionBox["4122.838`", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "x3"}]]}]], "-", 
          FractionBox["4515.028`", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "x4"}]]}]]}]]}]]}], "+", 
     FractionBox["16840.135`", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         FractionBox["0.75`", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "x1"}]]}]], "+", 
         FractionBox["0.94`", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "x2"}]]}]], "+", 
         FractionBox["0.986`", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "x3"}]]}]], "+", 
         FractionBox["0.892`", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "x4"}]]}]]}]]}]]}]]}]]], "Output",
 CellChangeTimes->{
  3.6552864041136827`*^9, 3.6552865002027807`*^9, 3.655286537028885*^9, {
   3.655286580193472*^9, 3.655286664276821*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"(", "1", ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["E", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{"1", "+", 
              SuperscriptBox["E", 
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox["1", 
                   RowBox[{"1", "+", 
                    SuperscriptBox["E", 
                    RowBox[{"-", 
                    RowBox[{"(", "x", ")"}]}]]}]], ".", "i14", ".", "w"}], 
                 ")"}]}]]}]], 
            RowBox[{"i9", ".", "w"}]}], "+", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"1", "+", 
              SuperscriptBox["E", 
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox["1", 
                   RowBox[{"1", "+", 
                    SuperscriptBox["E", 
                    RowBox[{"-", 
                    RowBox[{"(", "x", ")"}]}]]}]], ".", "i58", ".", "w"}], 
                 ")"}]}]]}]], 
            RowBox[{"i10", ".", "w"}]}]}], ")"}]}]]}], ")"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x3", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x4", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6552867397101717`*^9, 3.655286860721383*^9}, {
  3.6552889195982513`*^9, 3.6552889516201973`*^9}, {3.65528900039497*^9, 
  3.6552890006270733`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x1$$ = 0.5, $CellContext`x2$$ = 
    0.45599999999999996`, $CellContext`x3$$ = 0.5, $CellContext`x4$$ = 0.5, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x1$$], -1, 1}, {
      Hold[$CellContext`x2$$], -1, 1}, {
      Hold[$CellContext`x3$$], -1, 1}, {
      Hold[$CellContext`x4$$], -1, 1}}, Typeset`size$$ = {109., {1., 17.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`x1$4797$$ = 0, $CellContext`x2$4798$$ = 
    0, $CellContext`x3$4799$$ = 0, $CellContext`x4$4800$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`x1$$ = -1, $CellContext`x2$$ = -1, \
$CellContext`x3$$ = -1, $CellContext`x4$$ = -1}, "ControllerVariables" :> {
        Hold[$CellContext`x1$$, $CellContext`x1$4797$$, 0], 
        Hold[$CellContext`x2$$, $CellContext`x2$4798$$, 0], 
        Hold[$CellContext`x3$$, $CellContext`x3$4799$$, 0], 
        Hold[$CellContext`x4$$, $CellContext`x4$4800$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (1 + 
        E^((-1662.11)/(1 + 
           E^(0. - 4803.786/(1 + E^(-$CellContext`x1$$)) - 4565.815/(1 + 
             E^(-$CellContext`x2$$)) - 4122.838/(1 + E^(-$CellContext`x3$$)) - 
             4515.028/(1 + E^(-$CellContext`x4$$)))) + 
          16840.135/(1 + 
           E^(0. + 0.75/(1 + E^(-$CellContext`x1$$)) + 
             0.94/(1 + E^(-$CellContext`x2$$)) + 
             0.986/(1 + E^(-$CellContext`x3$$)) + 
             0.892/(1 + E^(-$CellContext`x4$$))))))^(-1), 
      "Specifications" :> {{$CellContext`x1$$, -1, 1}, {$CellContext`x2$$, -1,
          1}, {$CellContext`x3$$, -1, 1}, {$CellContext`x4$$, -1, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{499., {277., 289.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6552889258885307`*^9, 3.655288952534152*^9}, 
   3.655289000971192*^9}]
}, Open  ]]
},
WindowSize->{1280, 778},
WindowMargins->{{-1280, Automatic}, {Automatic, -22}},
Magnification:>2. Inherited,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 766, 24, 90, "Input"],
Cell[1349, 48, 118879, 1948, 297, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120265, 2001, 617, 18, 56, "Input"],
Cell[120885, 2021, 513, 15, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121435, 2041, 700, 21, 56, "Input"],
Cell[122138, 2064, 531, 15, 56, "Output"]
}, Open  ]],
Cell[122684, 2082, 2955, 75, 321, "Input"],
Cell[125642, 2159, 1967, 49, 225, "Input"],
Cell[CellGroupData[{
Cell[127634, 2212, 246, 7, 93, "Input"],
Cell[127883, 2221, 783, 21, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128703, 2247, 208, 6, 56, "Input"],
Cell[128914, 2255, 6032, 163, 495, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134983, 2423, 1414, 41, 279, "Input"],
Cell[136400, 2466, 5982, 162, 495, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142419, 2633, 1167, 37, 225, "Input"],
Cell[143589, 2672, 1770, 50, 126, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145396, 2727, 120, 2, 56, "Input"],
Cell[145519, 2731, 1735, 49, 126, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147291, 2785, 3682, 104, 403, "Input"],
Cell[150976, 2891, 4903, 90, 820, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155916, 2986, 1082, 28, 150, "Input"],
Cell[157001, 3016, 25881, 476, 501, "Output"]
}, Open  ]],
Cell[182897, 3495, 69, 1, 56, "Input"],
Cell[CellGroupData[{
Cell[182991, 3500, 312, 9, 95, "Input"],
Cell[183306, 3511, 307, 9, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183650, 3525, 303, 8, 92, "Input"],
Cell[183956, 3535, 249, 8, 91, "Output"]
}, Open  ]],
Cell[184220, 3546, 212, 6, 122, "Input"],
Cell[184435, 3554, 79, 1, 56, "Input"],
Cell[CellGroupData[{
Cell[184539, 3559, 966, 30, 156, "Input"],
Cell[185508, 3591, 2442, 50, 489, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187987, 3646, 2623, 56, 289, "Input"],
Cell[190613, 3704, 2637, 53, 463, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193287, 3762, 362, 7, 321, "Input"],
Cell[193652, 3771, 116, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193805, 3777, 275, 7, 56, "Input"],
Cell[194083, 3786, 179, 2, 90, "Output"]
}, Open  ]],
Cell[194277, 3791, 1647, 44, 354, "Input"],
Cell[CellGroupData[{
Cell[195949, 3839, 1742, 39, 239, "Input"],
Cell[197694, 3880, 18780, 321, 449, 8096, 146, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[216489, 4204, 91, 1, 56, "Input"],
Cell[CellGroupData[{
Cell[216605, 4209, 1321, 37, 239, "Input"],
Cell[217929, 4248, 7114, 175, 579, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225080, 4428, 881, 27, 90, "Input"],
Cell[225964, 4457, 1322, 27, 156, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227323, 4489, 935, 28, 123, "Input"],
Cell[228261, 4519, 106, 2, 56, "Output"]
}, Open  ]],
Cell[228382, 4524, 530, 13, 90, "Input"],
Cell[CellGroupData[{
Cell[228937, 4541, 279, 5, 90, "Input"],
Cell[229219, 4548, 191, 3, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229447, 4556, 1247, 38, 197, "Input"],
Cell[230697, 4596, 1815, 48, 148, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232549, 4649, 1854, 54, 338, "Input"],
Cell[234406, 4705, 2668, 52, 620, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
